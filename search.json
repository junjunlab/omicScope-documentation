[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "omicScope",
    "section": "",
    "text": "Welcome\nOmicScope: Streamlining RNA-seq Analysis Through Integrated Workflow Design\nThe development of omicScope emerged directly from practical challenges encountered during RNA-seq data analysis. Traditional RNA-seq workflows demand extensive, repetitive coding at each analytical stage—from count normalization through statistical testing to visualization. This fragmented approach not only consumes considerable time but also introduces potential inconsistencies and errors across analysis steps.\nBuilt upon the robust SummarizedExperiment framework, omicScope addresses these limitations by encapsulating the complete RNA-seq analysis pipeline within a unified, object-oriented architecture. The package enables researchers to execute sophisticated analyses—including count normalization, PCA-based dimensionality reduction, differential expression testing, pathway enrichment analysis, and publication-quality visualization—through minimal, intuitive code. This design philosophy prioritizes both analytical rigor and practical usability, making advanced RNA-seq analysis accessible to researchers regardless of their computational background.\nOmicScope demonstrates exceptional flexibility in data input strategies. Users can initiate analysis directly from BAM alignment files for complete end-to-end quantification, provide pre-computed count matrices from standard RNA-seq pipelines, or leverage curated gene expression datasets from the UCSC Xena database. This latter capability proves particularly valuable for cancer genomics research, enabling rapid exploratory analysis of tumor samples across multiple cancer types without requiring local data preprocessing. The integration with Xena’s standardized datasets facilitates reproducible comparative oncology studies and accelerates hypothesis generation in translational research contexts.\nLooking forward, the omicScope ecosystem will expand to incorporate additional analytical capabilities based on community feedback and emerging methodological advances. Planned enhancements include multi-omics integration modules, single-cell RNA-seq support, machine learning-based classification tools, and enhanced interoperability with complementary Bioconductor packages. We deeply appreciate the support and engagement from the user community, whose insights continue to shape omicScope’s evolution as a comprehensive solution for modern transcriptomic analysis. Your feedback, bug reports, and feature suggestions remain invaluable to the project’s ongoing development and refinement.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "Introduction.html",
    "href": "Introduction.html",
    "title": "Overview",
    "section": "",
    "text": "omicScope",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "Introduction.html#installation",
    "href": "Introduction.html#installation",
    "title": "Overview",
    "section": "Installation",
    "text": "Installation\nomicScope is now on github. You can install it like this:\n\n# install.packages(\"devtools\")\ndevtools::install_github(\"junjunlab/omicScope\")\n\n# or\nremotes::install_github(\"junjunlab/omicScope\")\n\nFeel free to leave any suggestions or questions about omicScope at the following address: https://github.com/junjunlab/omicScope/issues.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "Introduction.html#future-plans",
    "href": "Introduction.html#future-plans",
    "title": "Overview",
    "section": "Future plans",
    "text": "Future plans\nWe welcome any ideas or suggestions you may have for omicScope. Your feedback is invaluable in helping us improve the project. If you are interested in contributing, please feel free to reach out to us directly.\nAdditionally, we invite you to contribute your code on our GitHub repository for omicScope. Collaborating with the community is key to enhancing the functionality and usability of our tools, and we would love to see your contributions!",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "BamFiles-example.html",
    "href": "BamFiles-example.html",
    "title": "\n1  Bam files example\n",
    "section": "",
    "text": "1.1 Introduction\nRNA-seq upstream analysis involves removing adapter sequences from FASTQ files, aligning reads to the reference genome, and quantifying gene expression using HTSeq or featureCounts to obtain raw read counts. omicScope directly accepts aligned BAM files as input and provides the count_data() function to perform quantification analysis on constructed omicscope objects. The generated count matrix is stored within the omicscope object, enabling subsequent downstream analyses.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#omicscope-object-construction",
    "href": "BamFiles-example.html#omicscope-object-construction",
    "title": "\n1  Bam files example\n",
    "section": "\n1.2 Omicscope object construction",
    "text": "1.2 Omicscope object construction\nIn the following example, we will construct an omicscope object using pre-aligned BAM files as input. In addition to the BAM files, sample metadata containing grouping information is required:\n\n# bam test\nlibrary(SummarizedExperiment)\nlibrary(omicScope)\n\nbams &lt;- list.files(\"../test-bam/\",pattern = \"*.bam$\")\nbams\n# [1] \"0a.bam\"         \"0a.sorted.bam\"  \"0b.bam\"         \"0b.sorted.bam\"  \"10a.bam\"        \"10a.sorted.bam\" \"10b.bam\"       \n# [8] \"10b.sorted.bam\" \"4a.bam\"         \"4a.sorted.bam\"  \"4b.bam\"         \"4b.sorted.bam\" \n\nbams &lt;- c(\"../test-bam/0a.sorted.bam\",\"../test-bam/0b.sorted.bam\",\n          \"../test-bam/4a.sorted.bam\",\"../test-bam/4b.sorted.bam\",\n          \"../test-bam/10a.sorted.bam\",\"../test-bam/10b.sorted.bam\")\n\n\nmta &lt;- data.frame(sample = bams,\n                  sample_name = c(\"day0-rep1\",\"day0-rep2\",\"day4-rep1\",\"day4-rep2\",\n                                  \"day10-rep1\",\"day10-rep2\"),\n                  group = rep(c(\"day0\",\"day4\",\"day10\"),each = 2))\nmta\n#                       sample sample_name group\n# 1  ../test-bam/0a.sorted.bam   day0-rep1  day0\n# 2  ../test-bam/0b.sorted.bam   day0-rep2  day0\n# 3  ../test-bam/4a.sorted.bam   day4-rep1  day4\n# 4  ../test-bam/4b.sorted.bam   day4-rep2  day4\n# 5 ../test-bam/10a.sorted.bam  day10-rep1 day10\n# 6 ../test-bam/10b.sorted.bam  day10-rep2 day10\n\nWe construct the omicscope object using the omicscope() function. The created object inherits from the SummarizedExperiment class, allowing users to access feature metadata and sample information using standard accessor functions like rowData() and colData(), respectively:\n\nos &lt;- omicscope(gtfAnno = \"../test-bam/Mus_musculus.GRCm38.102.gtf.gz\",\n                bamFile = bams,\n                metadata = mta)\nos\n# class: omicscope \n# dim: 55487 6 \n# metadata(0):\n#     assays(0):\n#     rownames(55487): ENSMUSG00000102693 ENSMUSG00000064842 ... ENSMUSG00000096730 ENSMUSG00000095742\n# rowData names(3): gene_id gene_name gene_biotype\n# colnames(6): ../test-bam/0a.sorted.bam ../test-bam/0b.sorted.bam ... ../test-bam/10a.sorted.bam ../test-bam/10b.sorted.bam\n# colData names(3): sample sample_name group\n\nrowData(os)\n# DataFrame with 55487 rows and 3 columns\n#                               gene_id      gene_name         gene_biotype\n#                           &lt;character&gt;    &lt;character&gt;          &lt;character&gt;\n# ENSMUSG00000102693 ENSMUSG00000102693  4933401J01Rik                  TEC\n# ENSMUSG00000064842 ENSMUSG00000064842        Gm26206                snRNA\n# ENSMUSG00000051951 ENSMUSG00000051951           Xkr4       protein_coding\n# ENSMUSG00000102851 ENSMUSG00000102851        Gm18956 processed_pseudogene\n# ENSMUSG00000103377 ENSMUSG00000103377        Gm37180                  TEC\n# ...                               ...            ...                  ...\n# ENSMUSG00000094431 ENSMUSG00000094431 CAAA01205117.1                miRNA\n# ENSMUSG00000094621 ENSMUSG00000094621 CAAA01098150.1                miRNA\n# ENSMUSG00000098647 ENSMUSG00000098647 CAAA01064564.1                miRNA\n# ENSMUSG00000096730 ENSMUSG00000096730       Vmn2r122       protein_coding\n# ENSMUSG00000095742 ENSMUSG00000095742 CAAA01147332.1       protein_coding\n\ncolData(os)\n# DataFrame with 6 rows and 3 columns\n#                                            sample sample_name       group\n#                                       &lt;character&gt; &lt;character&gt; &lt;character&gt;\n# ../test-bam/0a.sorted.bam  ../test-bam/0a.sorte..   day0-rep1        day0\n# ../test-bam/0b.sorted.bam  ../test-bam/0b.sorte..   day0-rep2        day0\n# ../test-bam/4a.sorted.bam  ../test-bam/4a.sorte..   day4-rep1        day4\n# ../test-bam/4b.sorted.bam  ../test-bam/4b.sorte..   day4-rep2        day4\n# ../test-bam/10a.sorted.bam ../test-bam/10a.sort..  day10-rep1       day10\n# ../test-bam/10b.sorted.bam ../test-bam/10b.sort..  day10-rep2       day10",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#read-quantification-from-bam-files",
    "href": "BamFiles-example.html#read-quantification-from-bam-files",
    "title": "\n1  Bam files example\n",
    "section": "\n1.3 Read quantification from BAM files",
    "text": "1.3 Read quantification from BAM files\nRead quantification can be performed using the count_data() function, which internally calls featureCounts() from the Rsubread package to process BAM files. The generated count matrix is stored in the omicscope object for downstream analysis:\n\nos &lt;- count_data(os, nThreads = 12)\n#         ==========     _____ _    _ ____  _____  ______          _____  \n#         =====         / ____| |  | |  _ \\|  __ \\|  ____|   /\\   |  __ \\ \n#           =====      | (___ | |  | | |_) | |__) | |__     /  \\  | |  | |\n#             ====      \\___ \\| |  | |  _ &lt;|  _  /|  __|   / /\\ \\ | |  | |\n#               ====    ____) | |__| | |_) | | \\ \\| |____ / ____ \\| |__| |\n#         ==========   |_____/ \\____/|____/|_|  \\_\\______/_/    \\_\\_____/\n#        Rsubread 2.22.1\n# \n# //========================== featureCounts setting ===========================\\\\\n# ||                                                                            ||\n# ||             Input files : 6 BAM files                                      ||\n# ||                                                                            ||\n# ||                           0a.sorted.bam                                    ||\n# ||                           0b.sorted.bam                                    ||\n# ||                           4a.sorted.bam                                    ||\n# ||                           4b.sorted.bam                                    ||\n# ||                           10a.sorted.bam                                   ||\n# ||                           10b.sorted.bam                                   ||\n# ||                                                                            ||\n# ||              Paired-end : yes                                              ||\n# ||        Count read pairs : yes                                              ||\n# ||              Annotation : Mus_musculus.GRCm38.102.gtf.gz (GTF)             ||\n# ||      Dir for temp files : .                                                ||\n# ||                 Threads : 12                                               ||\n# ||                   Level : meta-feature level                               ||\n# ||      Multimapping reads : counted                                          ||\n# || Multi-overlapping reads : not counted                                      ||\n# ||   Min overlapping bases : 1                                                ||\n# ||                                                                            ||\n# \\\\============================================================================//\n# \n# //================================= Running ==================================\\\\\n# ||                                                                            ||\n# || Load annotation file Mus_musculus.GRCm38.102.gtf.gz ...                    ||\n# ||    Features : 843712                                                       ||\n# ||    Meta-features : 55487                                                   ||\n# ||    Chromosomes/contigs : 45                                                ||\n# ||                                                                            ||\n# || Process BAM file 0a.sorted.bam...                                          ||\n# ||    Paired-end reads are included.                                          ||\n# ||    Total alignments : 41866848                                             ||\n# ||    Successfully assigned alignments : 21829320 (52.1%)                     ||\n# ||    Running time : 0.80 minutes                                             ||\n# ||                                                                            ||\n# || Process BAM file 0b.sorted.bam...                                          ||\n# ||    Paired-end reads are included.                                          ||\n# ||    Total alignments : 43090084                                             ||\n# ||    Successfully assigned alignments : 21581339 (50.1%)                     ||\n# ||    Running time : 0.95 minutes                                             ||\n# ||                                                                            ||\n# || Process BAM file 4a.sorted.bam...                                          ||\n# ||    Paired-end reads are included.                                          ||\n# ||    Total alignments : 38381228                                             ||\n# ||    Successfully assigned alignments : 20113520 (52.4%)                     ||\n# ||    Running time : 0.70 minutes                                             ||\n# ||                                                                            ||\n# || Process BAM file 4b.sorted.bam...                                          ||\n# ||    Paired-end reads are included.                                          ||\n# ||    Total alignments : 39379217                                             ||\n# ||    Successfully assigned alignments : 20351678 (51.7%)                     ||\n# ||    Running time : 0.73 minutes                                             ||\n# ||                                                                            ||\n# || Process BAM file 10a.sorted.bam...                                         ||\n# ||    Paired-end reads are included.                                          ||\n# ||    Total alignments : 40463564                                             ||\n# ||    Successfully assigned alignments : 21379392 (52.8%)                     ||\n# ||    Running time : 0.71 minutes                                             ||\n# ||                                                                            ||\n# || Process BAM file 10b.sorted.bam...                                         ||\n# ||    Paired-end reads are included.                                          ||\n# ||    Total alignments : 40481313                                             ||\n# ||    Successfully assigned alignments : 19923083 (49.2%)                     ||\n# ||    Running time : 0.69 minutes                                             ||\n# ||                                                                            ||\n# || Write the final count table.                                               ||\n# || Write the read assignment summary.                                         ||\n# ||                                                                            ||\n# \\\\============================================================================//\n\nAccessing count data\n\nassay(os)[1:3,]\n# 3 x 6 sparse Matrix of class \"dgCMatrix\"\n#                    ../test-bam/0a.sorted.bam ../test-bam/0b.sorted.bam ../test-bam/4a.sorted.bam ../test-bam/4b.sorted.bam\n# ENSMUSG00000102693                         .                         1                         .                         .\n# ENSMUSG00000064842                         .                         .                         .                         .\n# ENSMUSG00000051951                        13                        16                       109                       147\n#                    ../test-bam/10a.sorted.bam ../test-bam/10b.sorted.bam\n# ENSMUSG00000102693                          .                          .\n# ENSMUSG00000064842                          .                          .\n# ENSMUSG00000051951                         65                        105",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#raw-count-normalization",
    "href": "BamFiles-example.html#raw-count-normalization",
    "title": "\n1  Bam files example\n",
    "section": "\n1.4 Raw count normalization",
    "text": "1.4 Raw count normalization\nRaw count data can be normalized using the normalize_data() function, which supports several normalization methods: TPM (Transcripts Per Million), RPKM (Reads Per Kilobase Million), CPM (Counts Per Million), and log1p transformation:\n\nos &lt;- normalize_data(os)\n\nassayNames(os)\n# [1] \"counts\"        \"normed_counts\"\n\nassay(os,\"normed_counts\")[1:3,1:3]\n# 3 x 3 sparse Matrix of class \"dgCMatrix\"\n#                    ../test-bam/0a.sorted.bam ../test-bam/0b.sorted.bam ../test-bam/4a.sorted.bam\n# ENSMUSG00000102693                 .                         0.1160302                  .       \n# ENSMUSG00000064842                 .                         .                          .       \n# ENSMUSG00000051951                 0.2632322                 0.3259661                  2.614308\n\n# cpm normalization\nos &lt;- normalize_data(os, norm_type = \"cpm\")\n\nassay(os,\"normed_counts\")[1:3,1:3]\n# 3 x 3 sparse Matrix of class \"dgCMatrix\"\n#                    ../test-bam/0a.sorted.bam ../test-bam/0b.sorted.bam ../test-bam/4a.sorted.bam\n# ENSMUSG00000102693               .                        0.0004633633                 .        \n# ENSMUSG00000064842               .                        .                            .        \n# ENSMUSG00000051951               0.005955293              0.0074138125                 0.0541924",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#dimensionality-reduction-and-clustering",
    "href": "BamFiles-example.html#dimensionality-reduction-and-clustering",
    "title": "\n1  Bam files example\n",
    "section": "\n1.5 Dimensionality reduction and clustering",
    "text": "1.5 Dimensionality reduction and clustering\nPrincipal Component Analysis (PCA) is routinely employed in RNA-seq quality control workflows to identify potential outlier samples. The run_reduction() function implements three dimensionality reduction approaches (PCA, UMAP, and t-SNE) for exploring and visualizing the relationships between samples:\n\nos &lt;- run_reduction(object = os, reduction = \"pca\")\n\ndim_plot(os)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#sample-correlation-analysis",
    "href": "BamFiles-example.html#sample-correlation-analysis",
    "title": "\n1  Bam files example\n",
    "section": "\n1.6 Sample correlation analysis",
    "text": "1.6 Sample correlation analysis\nIn addition to dimensionality reduction approaches such as PCA and UMAP for exploring sample relationships, correlation analysis provides another perspective on inter-sample associations. The correlation_plot function performs correlation analysis and produces a correlation heatmap:\n\nlibrary(patchwork)\n\nos &lt;- get_normalized_data(os)\n\ncorrelation_plot(os)\n\n\n\n\n\nWhen sample names are specified for both x and y parameters, the function generates a correlation scatter plot:\n\np1 &lt;- correlation_plot(os,\n                       x = \"day0-rep1\",y = \"day0-rep2\")\n\np2 &lt;- correlation_plot(os,\n                       x = \"day10-rep1\",y = \"day10-rep2\")\n\np1 + p2",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#differential-expression-analysis",
    "href": "BamFiles-example.html#differential-expression-analysis",
    "title": "\n1  Bam files example\n",
    "section": "\n1.7 Differential expression analysis",
    "text": "1.7 Differential expression analysis\nTo identify genes with differential expression patterns across various treatment conditions or sample groups, the differential_expression() function provides integrated support for three leading statistical methods: DESeq2, limma, and edgeR. This flexibility allows users to select the analytical approach that best suits their experimental design and data characteristics.\nIn the following analysis, we compare gene expression between day 10 and day 0 samples (with day 10 as the treatment group and day 0 as the control) using the DESeq2 method:\n\nos &lt;- differential_expression(os,\n                              method = \"deseq2\",\n                              selectedSample = c(\"day0-rep1\",\"day0-rep2\",\n                                                 \"day10-rep1\",\"day10-rep2\"),\n                              deseq2Contrast = c('group', 'day10', 'day0')\n)\n\nDifferential expression analysis results are stored within the diffExpData slot of the omicscope object. The results are organized as a diffdata S4 object containing the following components: contrast name, statistical method used, numbers of significantly up- and down-regulated genes, user-defined thresholds for log2FoldChange and p-value, and a detailed data frame with complete differential expression statistics:\n\nres &lt;- os@diffExpData$deseq2$treat_vs_control\n\nstr(res)\n# Formal class 'diffdata' [package \"omicScope\"] with 9 slots\n#   ..@ contrastName   : chr \"treat_vs_control\"\n#   ..@ method         : chr \"deseq2\"\n#   ..@ design         :List of 1\n#   .. ..$ :Class 'formula'  language ~group\n#   .. .. .. ..- attr(*, \".Environment\")=&lt;environment: 0x0000018b47022928&gt; \n#   ..@ log2FCthreshold: num 1\n#   ..@ pvalueThreshold: num 0.05\n#   ..@ sigUp          : int 6281\n#   ..@ sigDown        : int 5352\n#   ..@ nonSig         : int 27096\n#   ..@ data           :'data.frame':   38729 obs. of  10 variables:\n#   .. ..$ gene_id       : chr [1:38729] \"ENSMUSG00000000001\" \"ENSMUSG00000000028\" \"ENSMUSG00000000031\" \"ENSMUSG00000000037\" ...\n#   .. ..$ baseMean      : num [1:38729] 3613.15 1001.61 14141.49 792.04 1.38 ...\n#   .. ..$ log2FoldChange: num [1:38729] 0.559 -1.608 8.344 -3.364 3.798 ...\n#   .. ..$ lfcSE         : num [1:38729] 0.18 0.181 0.212 0.208 3.23 ...\n#   .. ..$ stat          : num [1:38729] 3.1 -8.9 39.27 -16.2 1.18 ...\n#   .. ..$ pvalue        : num [1:38729] 1.92e-03 5.69e-19 0.00 4.87e-59 2.40e-01 ...\n#   .. ..$ padj          : num [1:38729] 5.35e-03 7.43e-18 0.00 3.31e-57 NA ...\n#   .. ..$ gene_name     : chr [1:38729] \"Gnai3\" \"Cdc45\" \"H19\" \"Scml2\" ...\n#   .. ..$ gene_biotype  : chr [1:38729] \"protein_coding\" \"protein_coding\" \"lincRNA\" \"protein_coding\" ...\n#   .. ..$ type          : chr [1:38729] \"nonSig\" \"sigDown\" \"sigUp\" \"sigDown\" ...\n\n\nhead(res@data)\n#              gene_id     baseMean log2FoldChange     lfcSE       stat       pvalue         padj gene_name   gene_biotype    type\n# 1 ENSMUSG00000000001  3613.151868      0.5587918 0.1800792   3.103033 1.915484e-03 5.347565e-03     Gnai3 protein_coding  nonSig\n# 2 ENSMUSG00000000028  1001.607495     -1.6083184 0.1807529  -8.897882 5.692256e-19 7.428221e-18     Cdc45 protein_coding sigDown\n# 3 ENSMUSG00000000031 14141.492563      8.3442336 0.2124597  39.274424 0.000000e+00 0.000000e+00       H19        lincRNA   sigUp\n# 4 ENSMUSG00000000037   792.043426     -3.3640508 0.2076300 -16.202139 4.870343e-59 3.306090e-57     Scml2 protein_coding sigDown\n# 5 ENSMUSG00000000049     1.379006      3.7979399 3.2298910   1.175872 2.396458e-01           NA      Apoh protein_coding  nonSig\n# 6 ENSMUSG00000000056   927.514232      1.5135494 0.2393950   6.322392 2.575447e-10 1.749060e-09      Narf protein_coding   sigUp\n\nTo visualize the differential expression results, we use the volcano_plot() function, which generates a volcano plot displaying log2FoldChange versus statistical significance:\n\n# plot\nvolcano_plot(os, \n             method = \"deseq2\",\n             gene_number_label_pos = c(0.95,0.02))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#pathway-functional-enrichment-analysis",
    "href": "BamFiles-example.html#pathway-functional-enrichment-analysis",
    "title": "\n1  Bam files example\n",
    "section": "\n1.8 Pathway functional enrichment analysis",
    "text": "1.8 Pathway functional enrichment analysis\nThe run_enrichment() function performs pathway enrichment analysis separately on up- and down-regulated genes from stored differential expression results. Supported methods include “go”, “gsea_go”, “kegg”, and “gsea_kegg”, with results automatically stored in the enrichmentData slot:\n\nlibrary(clusterProfiler)\nlibrary(org.Mm.eg.db)\n\nos &lt;- run_enrichment(os,\n                     enrich_type = \"go\",\n                     OrgDb = org.Mm.eg.db,\n                     pvalueCutoff  = 0.05)\n# Start for method of deseq2 and contrast for treat_vs_control enrichment analysis...\n# ...\n\nenrich.res &lt;- os@enrichmentData$GO\n\nstr(enrich.res)\n# Formal class 'SimpleList' [package \"S4Vectors\"] with 4 slots\n#   ..@ listData       :List of 2\n#   .. ..$ deseq2|treat_vs_control|go|sigUp  :Formal class 'enrichResult' [package \"DOSE\"] with 15 slots\n#   .. .. .. ..@ result       :'data.frame':    4009 obs. of  13 variables:\n#   .. .. .. .. ..$ ONTOLOGY      : chr [1:4009] \"BP\" \"BP\" \"BP\" \"BP\" ...\n#   .. .. .. .. ..$ ID            : chr [1:4009] \"GO:0030198\" \"GO:0045229\" \"GO:0043062\" \"GO:0042060\" ...\n#   .. .. .. .. ..$ Description   : chr [1:4009] \"extracellular matrix organization\" \"external encapsulating structure organization\" \"extracellular structure organization\" \"wound healing\" ...\n#   .. .. .. .. ..$ GeneRatio     : chr [1:4009] \"199/4736\" \"199/4736\" \"199/4736\" \"196/4736\" ...\n#   .. .. .. .. ..$ BgRatio       : chr [1:4009] \"337/28832\" \"338/28832\" \"339/28832\" \"403/28832\" ...\n#   .. .. .. .. ..$ RichFactor    : num [1:4009] 0.591 0.589 0.587 0.486 0.472 ...\n#   .. .. .. .. ..$ FoldEnrichment: num [1:4009] 3.59 3.58 3.57 2.96 2.87 ...\n#   .. .. .. .. ..$ zScore        : num [1:4009] 21.2 21.2 21.1 17.6 16.6 ...\n#   .. .. .. .. ..$ pvalue        : num [1:4009] 5.40e-71 1.11e-70 2.25e-70 1.33e-51 2.40e-46 ...\n#   .. .. .. .. ..$ p.adjust      : num [1:4009] 3.37e-67 3.45e-67 4.69e-67 2.07e-48 2.99e-43 ...\n#   .. .. .. .. ..$ qvalue        : num [1:4009] 1.50e-67 1.54e-67 2.09e-67 9.23e-49 1.33e-43 ...\n#   .. .. .. .. ..$ geneID        : chr [1:4009] \"Postn/Col3a1/Smoc2/Nepn/Ctss/Pparg/Col1a1/Ccdc80/Col6a1/Lox/Col4a6/Adamts18/Col16a1/Col1a2/Foxf1/Adamts12/Col4a\"| __truncated__ \"Postn/Col3a1/Smoc2/Nepn/Ctss/Pparg/Col1a1/Ccdc80/Col6a1/Lox/Col4a6/Adamts18/Col16a1/Col1a2/Foxf1/Adamts12/Col4a\"| __truncated__ \"Postn/Col3a1/Smoc2/Nepn/Ctss/Pparg/Col1a1/Ccdc80/Col6a1/Lox/Col4a6/Adamts18/Col16a1/Col1a2/Foxf1/Adamts12/Col4a\"| __truncated__ \"F13a1/Plek/Col3a1/Smoc2/Bnc1/Svep1/Pparg/Pf4/Lilrb4a/Fgb/Tlr4/Ccl2/Itgb6/Nrp1/C1qtnf1/Muc16/Adamts18/Kng2/Mmrn1\"| __truncated__ ...\n#   .. .. .. .. ..$ Count         : int [1:4009] 199 199 199 196 185 167 212 154 173 201 ...\n#   .. .. .. ..@ pvalueCutoff : num 0.05\n#   .. .. .. ..@ pAdjustMethod: chr \"BH\"\n#   .. .. .. ..@ qvalueCutoff : num 0.2\n#   .. .. .. ..@ organism     : chr \"Mus musculus\"\n#   .. .. .. ..@ ontology     : chr \"GOALL\"\n#   .. .. .. ..@ gene         : chr [1:5283] \"17022\" \"102636514\" \"11576\" \"74145\" ...\n#   .. .. .. ..@ keytype      : chr \"ENTREZID\"\n#   .. .. .. ..@ universe     : chr [1:28832] \"11545\" \"12628\" \"13804\" \"16882\" ...\n#   .. .. .. ..@ gene2Symbol  : Named chr [1:5283] \"Lum\" \"Hand2os1\" \"Afp\" \"F13a1\" ...\n#   .. .. .. .. ..- attr(*, \"names\")= chr [1:5283] \"17022\" \"102636514\" \"11576\" \"74145\" ...\n#   .. .. .. ..@ geneSets     :List of 15714\n#   .. .. .. .. ..$ GO:0000002: chr [1:37] \"11545\" \"12628\" \"13804\" \"16882\" ...\n#   .. .. .. .. ..$ GO:0000018: chr [1:141] \"11350\" \"11461\" \"11545\" \"12053\" ...\n#   .. .. .. .. ..$ GO:0000023: chr \"232714\"\n#   .. .. .. .. ..$ GO:0000025: chr \"232714\"\n#   .. .. .. .. ..$ GO:0000038: chr [1:34] \"11430\" \"11666\" \"12686\" \"14081\" ...\n#   .. .. .. .. ..$ GO:0000041: chr [1:110] \"11306\" \"11776\" \"11927\" \"11977\" ...\n#   .. .. .. .. ..$ GO:0000045: chr [1:128] \"11781\" \"11793\" \"11938\" \"12421\" ...\n#   .. .. .. .. ..$ GO:0000050: chr [1:11] \"11846\" \"11847\" \"11898\" \"12606\" ...\n#   .. .. .. .. ..$ GO:0000052: chr [1:7] \"11898\" \"15194\" \"18416\" \"56454\" ...\n#   .. .. .. .. ..$ GO:0000070: chr [1:189] \"11789\" \"11799\" \"11848\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000075: chr [1:205] \"11789\" \"11799\" \"11909\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000077: chr [1:121] \"11909\" \"11920\" \"12021\" \"12144\" ...\n#   .. .. .. .. ..$ GO:0000079: chr [1:45] \"11491\" \"11651\" \"11789\" \"11819\" ...\n#   .. .. .. .. ..$ GO:0000082: chr [1:223] \"11461\" \"11477\" \"11479\" \"11491\" ...\n#   .. .. .. .. ..$ GO:0000086: chr [1:144] \"11799\" \"11820\" \"11920\" \"12021\" ...\n#   .. .. .. .. ..$ GO:0000096: chr [1:32] \"11611\" \"11720\" \"12116\" \"12286\" ...\n#   .. .. .. .. ..$ GO:0000097: chr [1:16] \"12116\" \"12411\" \"14598\" \"17769\" ...\n#   .. .. .. .. ..$ GO:0000098: chr [1:7] \"11611\" \"11720\" \"12411\" \"12583\" ...\n#   .. .. .. .. ..$ GO:0000101: chr [1:13] \"17254\" \"18023\" \"20510\" \"20511\" ...\n#   .. .. .. .. ..$ GO:0000103: chr [1:4] \"23971\" \"23972\" \"53315\" \"54200\"\n#   .. .. .. .. ..$ GO:0000105: chr [1:2] \"108156\" \"665563\"\n#   .. .. .. .. ..$ GO:0000122: chr [1:984] \"11481\" \"11545\" \"11568\" \"11569\" ...\n#   .. .. .. .. ..$ GO:0000132: chr [1:38] \"12615\" \"13191\" \"13589\" \"14165\" ...\n#   .. .. .. .. ..$ GO:0000154: chr [1:32] \"14113\" \"14791\" \"15278\" \"52530\" ...\n#   .. .. .. .. ..$ GO:0000165: chr [1:850] \"11350\" \"11352\" \"11441\" \"11450\" ...\n#   .. .. .. .. ..$ GO:0000183: chr [1:9] \"18676\" \"20937\" \"64383\" \"93759\" ...\n#   .. .. .. .. ..$ GO:0000184: chr [1:48] \"11810\" \"14852\" \"14853\" \"15384\" ...\n#   .. .. .. .. ..$ GO:0000209: chr [1:272] \"11796\" \"11797\" \"11798\" \"12005\" ...\n#   .. .. .. .. ..$ GO:0000212: chr [1:25] \"12316\" \"12442\" \"13194\" \"17451\" ...\n#   .. .. .. .. ..$ GO:0000226: chr [1:688] \"11350\" \"11603\" \"11735\" \"11789\" ...\n#   .. .. .. .. ..$ GO:0000245: chr [1:50] \"13046\" \"14007\" \"14105\" \"19655\" ...\n#   .. .. .. .. ..$ GO:0000266: chr [1:52] \"11774\" \"12176\" \"13179\" \"14245\" ...\n#   .. .. .. .. ..$ GO:0000271: chr [1:67] \"11364\" \"11651\" \"11652\" \"11771\" ...\n#   .. .. .. .. ..$ GO:0000272: chr [1:40] \"11548\" \"11554\" \"12421\" \"12655\" ...\n#   .. .. .. .. ..$ GO:0000278: chr [1:894] \"11350\" \"11461\" \"11477\" \"11479\" ...\n#   .. .. .. .. ..$ GO:0000280: chr [1:466] \"11789\" \"11799\" \"11848\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000281: chr [1:93] \"11735\" \"11789\" \"11799\" \"11840\" ...\n#   .. .. .. .. ..$ GO:0000288: chr [1:52] \"11991\" \"12192\" \"12193\" \"12227\" ...\n#   .. .. .. .. ..$ GO:0000289: chr [1:26] \"12227\" \"17350\" \"18458\" \"18983\" ...\n#   .. .. .. .. ..$ GO:0000302: chr [1:226] \"11350\" \"11502\" \"11517\" \"11545\" ...\n#   .. .. .. .. ..$ GO:0000303: chr [1:26] \"11545\" \"11808\" \"11977\" \"12460\" ...\n#   .. .. .. .. ..$ GO:0000304: chr \"14360\"\n#   .. .. .. .. ..$ GO:0000305: chr [1:27] \"11545\" \"11808\" \"11977\" \"12460\" ...\n#   .. .. .. .. ..$ GO:0000375: chr [1:315] \"11758\" \"11834\" \"12261\" \"12696\" ...\n#   .. .. .. .. ..$ GO:0000377: chr [1:315] \"11758\" \"11834\" \"12261\" \"12696\" ...\n#   .. .. .. .. ..$ GO:0000380: chr [1:84] \"13046\" \"13207\" \"13211\" \"13548\" ...\n#   .. .. .. .. ..$ GO:0000381: chr [1:63] \"13046\" \"13207\" \"13548\" \"13992\" ...\n#   .. .. .. .. ..$ GO:0000394: chr [1:11] \"28088\" \"66078\" \"66637\" \"67106\" ...\n#   .. .. .. .. ..$ GO:0000395: chr [1:6] \"20630\" \"101739\" \"110809\" \"231769\" ...\n#   .. .. .. .. ..$ GO:0000398: chr [1:315] \"11758\" \"11834\" \"12261\" \"12696\" ...\n#   .. .. .. .. ..$ GO:0000413: chr [1:14] \"18087\" \"19035\" \"19038\" \"23988\" ...\n#   .. .. .. .. ..$ GO:0000422: chr [1:106] \"11739\" \"11740\" \"11793\" \"11983\" ...\n#   .. .. .. .. ..$ GO:0000423: chr [1:89] \"11739\" \"11740\" \"11793\" \"11983\" ...\n#   .. .. .. .. ..$ GO:0000425: chr [1:11] \"11920\" \"12421\" \"18412\" \"19302\" ...\n#   .. .. .. .. ..$ GO:0000578: chr [1:46] \"12387\" \"12667\" \"12705\" \"12808\" ...\n#   .. .. .. .. ..$ GO:0000712: chr [1:17] \"17350\" \"20892\" \"21973\" \"21974\" ...\n#   .. .. .. .. ..$ GO:0000723: chr [1:156] \"11545\" \"11792\" \"11920\" \"11991\" ...\n#   .. .. .. .. ..$ GO:0000724: chr [1:178] \"11350\" \"11461\" \"11545\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000725: chr [1:183] \"11350\" \"11461\" \"11545\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000731: chr [1:37] \"12581\" \"18538\" \"18968\" \"18971\" ...\n#   .. .. .. .. ..$ GO:0000768: chr [1:70] \"11501\" \"11502\" \"12292\" \"12334\" ...\n#   .. .. .. .. ..$ GO:0000819: chr [1:229] \"11461\" \"11789\" \"11799\" \"11848\" ...\n#   .. .. .. .. ..$ GO:0000820: chr [1:7] \"11789\" \"12752\" \"16467\" \"20186\" ...\n#   .. .. .. .. ..$ GO:0000821: chr [1:4] \"12752\" \"14194\" \"20540\" \"381290\"\n#   .. .. .. .. ..$ GO:0000902: chr [1:1151] \"11308\" \"11350\" \"11352\" \"11423\" ...\n#   .. .. .. .. ..$ GO:0000910: chr [1:187] \"11735\" \"11744\" \"11789\" \"11799\" ...\n#   .. .. .. .. ..$ GO:0000912: chr [1:9] \"13605\" \"18571\" \"18810\" \"20166\" ...\n#   .. .. .. .. ..$ GO:0000915: chr [1:9] \"13605\" \"18571\" \"18810\" \"20166\" ...\n#   .. .. .. .. ..$ GO:0000956: chr [1:124] \"11810\" \"11920\" \"11991\" \"12192\" ...\n#   .. .. .. .. ..$ GO:0001100: chr \"66214\"\n#   .. .. .. .. ..$ GO:0001101: chr [1:267] \"11827\" \"11898\" \"11977\" \"11991\" ...\n#   .. .. .. .. ..$ GO:0001408: chr [1:10] \"20509\" \"27416\" \"30936\" \"56392\" ...\n#   .. .. .. .. ..$ GO:0001501: chr [1:591] \"11432\" \"11433\" \"11474\" \"11480\" ...\n#   .. .. .. .. ..$ GO:0001502: chr [1:22] \"11595\" \"12023\" \"12167\" \"12814\" ...\n#   .. .. .. .. ..$ GO:0001503: chr [1:511] \"11423\" \"11474\" \"11477\" \"11480\" ...\n#   .. .. .. .. ..$ GO:0001504: chr [1:45] \"11820\" \"13162\" \"13340\" \"13489\" ...\n#   .. .. .. .. ..$ GO:0001508: chr [1:186] \"11435\" \"11438\" \"11441\" \"11444\" ...\n#   .. .. .. .. ..$ GO:0001510: chr [1:69] \"11651\" \"13434\" \"14113\" \"14791\" ...\n#   .. .. .. .. ..$ GO:0001516: chr [1:33] \"11998\" \"13614\" \"13615\" \"16149\" ...\n#   .. .. .. .. ..$ GO:0001519: chr \"18484\"\n#   .. .. .. .. ..$ GO:0001523: chr [1:79] \"11304\" \"11522\" \"11529\" \"11532\" ...\n#   .. .. .. .. ..$ GO:0001525: chr [1:588] \"11350\" \"11421\" \"11465\" \"11477\" ...\n#   .. .. .. .. ..$ GO:0001539: chr [1:260] \"11441\" \"11497\" \"11500\" \"11642\" ...\n#   .. .. .. .. ..$ GO:0001541: chr [1:82] \"11516\" \"11600\" \"11622\" \"11705\" ...\n#   .. .. .. .. ..$ GO:0001542: chr [1:15] \"11504\" \"11576\" \"11606\" \"13615\" ...\n#   .. .. .. .. ..$ GO:0001543: chr [1:3] \"11606\" \"13615\" \"268903\"\n#   .. .. .. .. ..$ GO:0001545: chr [1:3] \"14309\" \"20779\" \"74434\"\n#   .. .. .. .. ..$ GO:0001547: chr [1:13] \"12167\" \"13874\" \"13982\" \"14453\" ...\n#   .. .. .. .. ..$ GO:0001549: chr [1:2] \"18159\" \"230103\"\n#   .. .. .. .. ..$ GO:0001550: chr [1:4] \"12167\" \"13874\" \"19288\" \"21930\"\n#   .. .. .. .. ..$ GO:0001553: chr [1:17] \"12394\" \"14366\" \"14566\" \"16323\" ...\n#   .. .. .. .. ..$ GO:0001554: chr [1:5] \"12366\" \"12367\" \"18128\" \"20564\" ...\n#   .. .. .. .. ..$ GO:0001556: chr [1:40] \"12173\" \"12190\" \"12531\" \"13164\" ...\n#   .. .. .. .. ..$ GO:0001558: chr [1:456] \"11350\" \"11426\" \"11479\" \"11482\" ...\n#   .. .. .. .. ..$ GO:0001560: chr [1:3] \"214384\" \"235036\" \"668303\"\n#   .. .. .. .. ..$ GO:0001561: chr [1:6] \"15112\" \"16922\" \"26458\" \"56794\" ...\n#   .. .. .. .. ..$ GO:0001562: chr [1:47] \"11846\" \"12051\" \"12183\" \"12493\" ...\n#   .. .. .. .. ..$ GO:0001568: chr [1:808] \"11350\" \"11421\" \"11465\" \"11475\" ...\n#   .. .. .. .. ..$ GO:0001569: chr [1:45] \"11350\" \"11477\" \"11600\" \"11622\" ...\n#   .. .. .. .. .. [list output truncated]\n#   .. .. .. ..@ readable     : logi TRUE\n#   .. .. .. ..@ termsim      : num[0 , 0 ] \n#   .. .. .. ..@ method       : chr(0) \n#   .. .. .. ..@ dr           : list()\n#   .. ..$ deseq2|treat_vs_control|go|sigDown:Formal class 'enrichResult' [package \"DOSE\"] with 15 slots\n#   .. .. .. ..@ result       :'data.frame':    1455 obs. of  13 variables:\n#   .. .. .. .. ..$ ONTOLOGY      : chr [1:1455] \"BP\" \"BP\" \"BP\" \"BP\" ...\n#   .. .. .. .. ..$ ID            : chr [1:1455] \"GO:0022613\" \"GO:0042254\" \"GO:0016072\" \"GO:0006364\" ...\n#   .. .. .. .. ..$ Description   : chr [1:1455] \"ribonucleoprotein complex biogenesis\" \"ribosome biogenesis\" \"rRNA metabolic process\" \"rRNA processing\" ...\n#   .. .. .. .. ..$ GeneRatio     : chr [1:1455] \"266/3534\" \"196/3534\" \"152/3534\" \"138/3534\" ...\n#   .. .. .. .. ..$ BgRatio       : chr [1:1455] \"454/28832\" \"320/28832\" \"256/28832\" \"215/28832\" ...\n#   .. .. .. .. ..$ RichFactor    : num [1:1455] 0.586 0.613 0.594 0.642 0.412 ...\n#   .. .. .. .. ..$ FoldEnrichment: num [1:1455] 4.78 5 4.84 5.24 3.36 ...\n#   .. .. .. .. ..$ zScore        : num [1:1455] 30.3 26.9 23.1 23.3 18.6 ...\n#   .. .. .. .. ..$ pvalue        : num [1:1455] 1.03e-124 1.02e-96 2.21e-72 4.40e-72 4.34e-53 ...\n#   .. .. .. .. ..$ p.adjust      : num [1:1455] 6.21e-121 3.10e-93 4.45e-69 6.66e-69 5.25e-50 ...\n#   .. .. .. .. ..$ qvalue        : num [1:1455] 5.02e-121 2.50e-93 3.60e-69 5.38e-69 4.24e-50 ...\n#   .. .. .. .. ..$ geneID        : chr [1:1455] \"Eif3c/Rpp30/Snrpb/Rpl13a/Rpl38/Ddx28/Eif6/Rps11/Rps25/Rps7/Prpf19/Ythdc1/Exosc8/Rps6-ps4/Rps24/Rpl35a/Srsf10/Us\"| __truncated__ \"Rpp30/Rpl38/Ddx28/Eif6/Rps11/Rps25/Rps7/Exosc8/Rps6-ps4/Rps24/Rpl35a/Usp36/Rps15/Utp3/Rpsa/Rplp0/Ngrn/Rpl14/Rps\"| __truncated__ \"Rpp30/Trir/Eif6/Rps25/Rps7/Exosc8/Rps6-ps4/Rps24/Rpl35a/Usp36/Rps15/Utp3/Rpl14/Utp25/Tfb1m/Ercc3/Exosc10/Myg1/M\"| __truncated__ \"Rpp30/Eif6/Rps25/Rps7/Exosc8/Rps6-ps4/Rps24/Rpl35a/Usp36/Rps15/Utp3/Rpl14/Utp25/Tfb1m/Exosc10/Myg1/Mrm3/Mettl5/\"| __truncated__ ...\n#   .. .. .. .. ..$ Count         : int [1:1455] 266 196 152 138 179 186 123 152 125 144 ...\n#   .. .. .. ..@ pvalueCutoff : num 0.05\n#   .. .. .. ..@ pAdjustMethod: chr \"BH\"\n#   .. .. .. ..@ qvalueCutoff : num 0.2\n#   .. .. .. ..@ organism     : chr \"Mus musculus\"\n#   .. .. .. ..@ ontology     : chr \"GOALL\"\n#   .. .. .. ..@ gene         : chr [1:4556] \"56347\" \"70238\" \"22278\" \"20713\" ...\n#   .. .. .. ..@ keytype      : chr \"ENTREZID\"\n#   .. .. .. ..@ universe     : chr [1:28832] \"11545\" \"12628\" \"13804\" \"16882\" ...\n#   .. .. .. ..@ gene2Symbol  : Named chr [1:4556] \"Eif3c\" \"Rnf168\" \"Usf1\" \"Serpini1\" ...\n#   .. .. .. .. ..- attr(*, \"names\")= chr [1:4556] \"56347\" \"70238\" \"22278\" \"20713\" ...\n#   .. .. .. ..@ geneSets     :List of 13974\n#   .. .. .. .. ..$ GO:0000002: chr [1:37] \"11545\" \"12628\" \"13804\" \"16882\" ...\n#   .. .. .. .. ..$ GO:0000012: chr [1:14] \"11545\" \"14211\" \"21958\" \"22064\" ...\n#   .. .. .. .. ..$ GO:0000017: chr [1:2] \"20537\" \"246787\"\n#   .. .. .. .. ..$ GO:0000018: chr [1:141] \"11350\" \"11461\" \"11545\" \"12053\" ...\n#   .. .. .. .. ..$ GO:0000019: chr [1:7] \"12144\" \"13871\" \"17350\" \"19360\" ...\n#   .. .. .. .. ..$ GO:0000022: chr [1:10] \"11799\" \"16319\" \"16571\" \"20877\" ...\n#   .. .. .. .. ..$ GO:0000027: chr [1:18] \"12181\" \"16418\" \"17725\" \"59014\" ...\n#   .. .. .. .. ..$ GO:0000028: chr [1:22] \"14109\" \"16785\" \"17724\" \"19090\" ...\n#   .. .. .. .. ..$ GO:0000038: chr [1:34] \"11430\" \"11666\" \"12686\" \"14081\" ...\n#   .. .. .. .. ..$ GO:0000041: chr [1:110] \"11306\" \"11776\" \"11927\" \"11977\" ...\n#   .. .. .. .. ..$ GO:0000045: chr [1:128] \"11781\" \"11793\" \"11938\" \"12421\" ...\n#   .. .. .. .. ..$ GO:0000050: chr [1:11] \"11846\" \"11847\" \"11898\" \"12606\" ...\n#   .. .. .. .. ..$ GO:0000052: chr [1:7] \"11898\" \"15194\" \"18416\" \"56454\" ...\n#   .. .. .. .. ..$ GO:0000053: chr [1:2] \"11898\" \"109900\"\n#   .. .. .. .. ..$ GO:0000054: chr [1:17] \"16418\" \"18148\" \"19069\" \"19384\" ...\n#   .. .. .. .. ..$ GO:0000055: chr [1:8] \"18148\" \"19069\" \"19384\" \"97112\" ...\n#   .. .. .. .. ..$ GO:0000056: chr [1:8] \"18148\" \"19069\" \"19384\" \"20054\" ...\n#   .. .. .. .. ..$ GO:0000070: chr [1:189] \"11789\" \"11799\" \"11848\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000075: chr [1:205] \"11789\" \"11799\" \"11909\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000076: chr [1:18] \"15574\" \"18392\" \"19356\" \"19367\" ...\n#   .. .. .. .. ..$ GO:0000077: chr [1:121] \"11909\" \"11920\" \"12021\" \"12144\" ...\n#   .. .. .. .. ..$ GO:0000079: chr [1:45] \"11491\" \"11651\" \"11789\" \"11819\" ...\n#   .. .. .. .. ..$ GO:0000080: chr \"320558\"\n#   .. .. .. .. ..$ GO:0000082: chr [1:223] \"11461\" \"11477\" \"11479\" \"11491\" ...\n#   .. .. .. .. ..$ GO:0000085: chr \"50883\"\n#   .. .. .. .. ..$ GO:0000086: chr [1:144] \"11799\" \"11820\" \"11920\" \"12021\" ...\n#   .. .. .. .. ..$ GO:0000087: chr [1:2] \"18023\" \"107995\"\n#   .. .. .. .. ..$ GO:0000089: chr [1:2] \"18023\" \"107995\"\n#   .. .. .. .. ..$ GO:0000096: chr [1:32] \"11611\" \"11720\" \"12116\" \"12286\" ...\n#   .. .. .. .. ..$ GO:0000097: chr [1:16] \"12116\" \"12411\" \"14598\" \"17769\" ...\n#   .. .. .. .. ..$ GO:0000098: chr [1:7] \"11611\" \"11720\" \"12411\" \"12583\" ...\n#   .. .. .. .. ..$ GO:0000101: chr [1:13] \"17254\" \"18023\" \"20510\" \"20511\" ...\n#   .. .. .. .. ..$ GO:0000105: chr [1:2] \"108156\" \"665563\"\n#   .. .. .. .. ..$ GO:0000122: chr [1:984] \"11481\" \"11545\" \"11568\" \"11569\" ...\n#   .. .. .. .. ..$ GO:0000132: chr [1:38] \"12615\" \"13191\" \"13589\" \"14165\" ...\n#   .. .. .. .. ..$ GO:0000154: chr [1:32] \"14113\" \"14791\" \"15278\" \"52530\" ...\n#   .. .. .. .. ..$ GO:0000160: chr \"18103\"\n#   .. .. .. .. ..$ GO:0000165: chr [1:850] \"11350\" \"11352\" \"11441\" \"11450\" ...\n#   .. .. .. .. ..$ GO:0000183: chr [1:9] \"18676\" \"20937\" \"64383\" \"93759\" ...\n#   .. .. .. .. ..$ GO:0000184: chr [1:48] \"11810\" \"14852\" \"14853\" \"15384\" ...\n#   .. .. .. .. ..$ GO:0000209: chr [1:272] \"11796\" \"11797\" \"11798\" \"12005\" ...\n#   .. .. .. .. ..$ GO:0000212: chr [1:25] \"12316\" \"12442\" \"13194\" \"17451\" ...\n#   .. .. .. .. ..$ GO:0000226: chr [1:688] \"11350\" \"11603\" \"11735\" \"11789\" ...\n#   .. .. .. .. ..$ GO:0000237: chr [1:6] \"17350\" \"21749\" \"22210\" \"22596\" ...\n#   .. .. .. .. ..$ GO:0000239: chr [1:4] \"57746\" \"57749\" \"110957\" \"671232\"\n#   .. .. .. .. ..$ GO:0000244: chr [1:11] \"19134\" \"22258\" \"27756\" \"28000\" ...\n#   .. .. .. .. ..$ GO:0000245: chr [1:50] \"13046\" \"14007\" \"14105\" \"19655\" ...\n#   .. .. .. .. ..$ GO:0000255: chr [1:13] \"11486\" \"14544\" \"18950\" \"22262\" ...\n#   .. .. .. .. ..$ GO:0000266: chr [1:52] \"11774\" \"12176\" \"13179\" \"14245\" ...\n#   .. .. .. .. ..$ GO:0000271: chr [1:67] \"11364\" \"11651\" \"11652\" \"11771\" ...\n#   .. .. .. .. ..$ GO:0000272: chr [1:40] \"11548\" \"11554\" \"12421\" \"12655\" ...\n#   .. .. .. .. ..$ GO:0000278: chr [1:894] \"11350\" \"11461\" \"11477\" \"11479\" ...\n#   .. .. .. .. ..$ GO:0000279: chr [1:15] \"14841\" \"17350\" \"18023\" \"21749\" ...\n#   .. .. .. .. ..$ GO:0000280: chr [1:466] \"11789\" \"11799\" \"11848\" \"11920\" ...\n#   .. .. .. .. ..$ GO:0000281: chr [1:93] \"11735\" \"11789\" \"11799\" \"11840\" ...\n#   .. .. .. .. ..$ GO:0000288: chr [1:52] \"11991\" \"12192\" \"12193\" \"12227\" ...\n#   .. .. .. .. ..$ GO:0000289: chr [1:26] \"12227\" \"17350\" \"18458\" \"18983\" ...\n#   .. .. .. .. ..$ GO:0000290: chr [1:12] \"12457\" \"18983\" \"53872\" \"67207\" ...\n#   .. .. .. .. ..$ GO:0000292: chr \"83703\"\n#   .. .. .. .. ..$ GO:0000302: chr [1:226] \"11350\" \"11502\" \"11517\" \"11545\" ...\n#   .. .. .. .. ..$ GO:0000303: chr [1:26] \"11545\" \"11808\" \"11977\" \"12460\" ...\n#   .. .. .. .. ..$ GO:0000305: chr [1:27] \"11545\" \"11808\" \"11977\" \"12460\" ...\n#   .. .. .. .. ..$ GO:0000320: chr [1:5] \"12443\" \"12449\" \"17869\" \"17986\" ...\n#   .. .. .. .. ..$ GO:0000338: chr [1:11] \"12848\" \"26572\" \"26754\" \"26891\" ...\n#   .. .. .. .. ..$ GO:0000349: chr [1:2] \"67439\" \"72886\"\n#   .. .. .. .. ..$ GO:0000350: chr [1:2] \"57905\" \"67229\"\n#   .. .. .. .. ..$ GO:0000375: chr [1:315] \"11758\" \"11834\" \"12261\" \"12696\" ...\n#   .. .. .. .. ..$ GO:0000377: chr [1:315] \"11758\" \"11834\" \"12261\" \"12696\" ...\n#   .. .. .. .. ..$ GO:0000379: chr [1:3] \"66078\" \"76265\" \"381802\"\n#   .. .. .. .. ..$ GO:0000380: chr [1:84] \"13046\" \"13207\" \"13211\" \"13548\" ...\n#   .. .. .. .. ..$ GO:0000381: chr [1:63] \"13046\" \"13207\" \"13548\" \"13992\" ...\n#   .. .. .. .. ..$ GO:0000387: chr [1:37] \"12729\" \"12812\" \"19134\" \"20595\" ...\n#   .. .. .. .. ..$ GO:0000388: chr \"320632\"\n#   .. .. .. .. ..$ GO:0000389: chr [1:2] \"57905\" \"193116\"\n#   .. .. .. .. ..$ GO:0000393: chr [1:5] \"57905\" \"67229\" \"67439\" \"72886\" ...\n#   .. .. .. .. ..$ GO:0000394: chr [1:11] \"28088\" \"66078\" \"66637\" \"67106\" ...\n#   .. .. .. .. ..$ GO:0000395: chr [1:6] \"20630\" \"101739\" \"110809\" \"231769\" ...\n#   .. .. .. .. ..$ GO:0000398: chr [1:315] \"11758\" \"11834\" \"12261\" \"12696\" ...\n#   .. .. .. .. ..$ GO:0000413: chr [1:14] \"18087\" \"19035\" \"19038\" \"23988\" ...\n#   .. .. .. .. ..$ GO:0000422: chr [1:106] \"11739\" \"11740\" \"11793\" \"11983\" ...\n#   .. .. .. .. ..$ GO:0000423: chr [1:89] \"11739\" \"11740\" \"11793\" \"11983\" ...\n#   .. .. .. .. ..$ GO:0000425: chr [1:11] \"11920\" \"12421\" \"18412\" \"19302\" ...\n#   .. .. .. .. ..$ GO:0000429: chr [1:8] \"17977\" \"18519\" \"21428\" \"22278\" ...\n#   .. .. .. .. ..$ GO:0000430: chr [1:7] \"18519\" \"21428\" \"22278\" \"22282\" ...\n#   .. .. .. .. ..$ GO:0000432: chr [1:6] \"18519\" \"21428\" \"22278\" \"22282\" ...\n#   .. .. .. .. ..$ GO:0000436: chr [1:7] \"17977\" \"18519\" \"21428\" \"22278\" ...\n#   .. .. .. .. ..$ GO:0000447: chr [1:8] \"30946\" \"59014\" \"59028\" \"66481\" ...\n#   .. .. .. .. ..$ GO:0000448: chr [1:3] \"12181\" \"18148\" \"74035\"\n#   .. .. .. .. ..$ GO:0000451: chr [1:2] \"67390\" \"217038\"\n#   .. .. .. .. ..$ GO:0000454: chr [1:5] \"52530\" \"66181\" \"68147\" \"234344\" ...\n#   .. .. .. .. ..$ GO:0000455: chr [1:4] \"68327\" \"106707\" \"245474\" \"271842\"\n#   .. .. .. .. ..$ GO:0000460: chr [1:33] \"12181\" \"16418\" \"18148\" \"19090\" ...\n#   .. .. .. .. ..$ GO:0000461: chr \"66481\"\n#   .. .. .. .. ..$ GO:0000462: chr [1:33] \"13871\" \"20055\" \"20085\" \"20116\" ...\n#   .. .. .. .. ..$ GO:0000463: chr [1:18] \"12181\" \"18148\" \"19989\" \"52202\" ...\n#   .. .. .. .. ..$ GO:0000466: chr [1:22] \"12181\" \"18148\" \"30946\" \"50911\" ...\n#   .. .. .. .. ..$ GO:0000467: chr [1:7] \"50911\" \"50912\" \"66362\" \"66446\" ...\n#   .. .. .. .. ..$ GO:0000470: chr [1:27] \"12181\" \"16418\" \"18148\" \"19989\" ...\n#   .. .. .. .. ..$ GO:0000472: chr [1:3] \"30946\" \"67842\" \"213773\"\n#   .. .. .. .. .. [list output truncated]\n#   .. .. .. ..@ readable     : logi TRUE\n#   .. .. .. ..@ termsim      : num[0 , 0 ] \n#   .. .. .. ..@ method       : chr(0) \n#   .. .. .. ..@ dr           : list()\n#   ..@ elementType    : chr \"ANY\"\n#   ..@ elementMetadata: NULL\n#   ..@ metadata       : list()\n\nThe output contains separate enrichResult objects for up-regulated and down-regulated gene sets. These objects are compatible with the enrichplot package, allowing direct visualization of enrichment results:\n\nlibrary(enrichplot)\nlibrary(patchwork)\n\np1 &lt;- dotplot(enrich.res$`deseq2|treat_vs_control|go|sigUp`,\n        label_format = 40) +\n    ggplot2::ggtitle(\"sigUp genes\")\n\np2 &lt;- dotplot(enrich.res$`deseq2|treat_vs_control|go|sigDown`,\n        label_format = 40) +\n    ggplot2::ggtitle(\"sigDown genes\")\n\n\np1 + p2\n\n\n\n\n\nGSEA analysis can be performed, and the results are stored in the enrichmentData slot:\n\nos &lt;- run_enrichment(os,\n                     enrich_type = \"gsea_kegg\",\n                     organism = \"mmu\",\n                     OrgDb = org.Mm.eg.db,\n                     pvalueCutoff  = 0.05)\n# Start for method of deseq2 and contrast for treat_vs_control enrichment analysis...\n# 'select()' returned 1:1 mapping between keys and columns\n# using 'fgsea' for GSEA analysis, please cite Korotkevich et al (2019).\n# \n# preparing geneSet collections...\n# GSEA analysis...\n# leading edge analysis...\n# done...\n\nenrich.res &lt;- os@enrichmentData$GSEA_KEGG\n\nenrich.res$`deseq2|treat_vs_control|gsea_kegg` |&gt; head()\n#                ID                                                   Description setSize enrichmentScore      NES pvalue     p.adjust\n# mmu04512 mmu04512                                      ECM-receptor interaction      86       0.6691084 2.467768  1e-10 3.136364e-09\n# mmu04061 mmu04061 Viral protein interaction with cytokine and cytokine receptor      87       0.6656097 2.454405  1e-10 3.136364e-09\n# mmu04820 mmu04820                                  Cytoskeleton in muscle cells     231       0.5735884 2.405003  1e-10 3.136364e-09\n# mmu05146 mmu05146                                                    Amoebiasis     101       0.6289523 2.388869  1e-10 3.136364e-09\n# mmu04510 mmu04510                                                Focal adhesion     199       0.5753364 2.379325  1e-10 3.136364e-09\n# mmu04060 mmu04060                        Cytokine-cytokine receptor interaction     262       0.5370025 2.282545  1e-10 3.136364e-09\n#               qvalue rank                   leading_edge\n# mmu04512 1.69378e-09 4874 tags=55%, list=16%, signal=46%\n# mmu04061 1.69378e-09 3024 tags=45%, list=10%, signal=40%\n# mmu04820 1.69378e-09 4874 tags=44%, list=16%, signal=37%\n# mmu05146 1.69378e-09 3521 tags=37%, list=12%, signal=32%\n# mmu04510 1.69378e-09 5017 tags=36%, list=17%, signal=30%\n# mmu04060 1.69378e-09 6917 tags=49%, list=23%, signal=38%\ncore_enrichment\n# mmuol6a3/Col1a1/Col6a1/Col4a6/Itgb6/Frem1/Col1a2/Col4a5/Tnc/Col6a2/Cd44/Col9a1/Vtn/Gp6/Itga4/Itga2/Lamc3/Thbs1/Lama4/Gp9/Lama2/Itgb3/Itga8/Cd36/Cd47/Fras1/Itgb8/Col4a3/Col4a2/Npnt/Col9a2/Reln/Col4a1/Thbs4/Sv2b/Thbs2/Lamc2/Lamb3/Itga2b/Lamb2/Col6a6/Itga7/Itga1/Col2a1/Itgb5/Comp/Fn1\n# mmuf4/Ccl9/Ccl2/Ccl7/Ppbp/Csf1r/Cxcr2/Il10ra/Ccr1/Cx3cr1/Ccl12/Tnf/Il2rb/Il18rap/Ccr5/Csf1/Cxcl12/Ccr2/Il18/Cxcl13/Il24/Tnfrsf14/Ackr3/Cxcl5/Tnfsf14/Cxcl1/Il10rb/Ccl3/Il19/Cx3cl1/Il6ra/Ccr1l1/Ccl6/Cxcr4/Ccl4/Ccl24/Cxcl11/Tnfrsf1a/Ccl17\n# mmu04820                                                                                                                                                                                              Col3a1/Col6a3/Trim55/Dcn/Col1a1/Csrp3/Col6a1/Tnnt2/Col4a6/Itgb6/Tnni1/Actg2/Col1a2/Myh7/Col4a5/Tnni2/Fbln2/Col5a1/Col6a2/Myh6/Col5a2/Fhl2/Tnnt3/Myl3/Col11a1/Daam2/Mybpc3/Col9a1/Actc1/Myoz2/Sspn/Ankrd1/Itga4/Itga2/Tcap/Bgn/Atp1b4/Thbs1/Ankrd2/Fbn2/Myl7/Nebl/Col24a1/Dsc2/Lama2/Myl4/Fbn1/Lmod3/Itgb3/Itga8/Sdc3/Tnnc1/Xirp1/Tmod1/Mybph/Itgb8/Col4a3/Myl2/Pdlim3/3425401B19Rik/Col4a2/Myl1/Col9a2/Pdlim4/Eno2/Lmod1/Dsp/Myl9/Vcan/Col4a1/Sdc2/Thbs4/Ldb3/Col27a1/Myh15/Thbs2/Des/Atp1a2/Myom1/Eln/Pdlim2/Fhl1/Itga2b/Col6a6/Csrp1/Fbln1/Nrap/Col11a2/Nid1/Syne1/Tpm4/Myh11/Tpm2/Itga7/Itga1/Sgce/Tpm1/Itgb5/Sun2/Comp/Fn1\n# mmuerpinb9e/Col3a1/Col1a1/Tlr4/Col4a6/Serpinb9c/Serpinb6b/Serpinb9g/Col1a2/Serpinb9d/Col4a5/Serpinb9f/Serpinb9/Tnf/Serpinb10/Cd14/Il1r1/Lamc3/Rab7b/Lama4/Tgfb2/Lama2/Serpinb9b/Tgfb3/Nos2/Col4a3/Tgfb1/Cxcl1/Col4a2/Plcb2/Itgb2/C9/Col4a1/Il1b/Lamc2/Lamb3/Lamb2\n# mmu04510                                                                                                                                                                                                                                                                                                                                                                                                 Col6a3/Col1a1/Col6a1/Col4a6/Itgb6/Col1a2/Hgf/Col4a5/Tnc/Col6a2/Kdr/Mylk3/Rac2/Col9a1/Igf1/Vtn/Cav1/Itga4/Itga2/Lamc3/Flt1/Cav2/Pgf/Thbs1/Lama4/Myl7/Parva/Lama2/Pdgfrb/Itgb3/Itga8/Ccnd2/Mylk/Emp2/Vav1/Egfr/Itgb8/Col4a3/Pdgfra/Myl2/Col4a2/Col9a2/Pdgfd/Reln/Myl9/Col4a1/Shc3/Vav3/Thbs4/Thbs2/Rasgrf1/Lamc2/Cav3/Bcl2/Pdgfb/Lamb3/Itga2b/Akt1/Lamb2/Col6a6/Pdgfc/Vegfa/Itga7/Itga1/Col2a1/Capn2/Itgb5/Comp/Met/Fn1/Myl10\n# mmu04060 Pf4/Bmp5/Ccl9/Ccl2/Gdf6/Gdf10/Ccl7/Ppbp/Mstn/Csf1r/Csf2rb/Prl6a1/Cxcr2/Il10ra/Ccr1/Mpl/Csf2rb2/Gdf2/Il21r/Bmp10/Cx3cr1/Inhba/Ccl12/Tnf/Il2rb/Il1rl1/Il18rap/Ccr5/Acvr1c/Bmp3/Il1r1/Osmr/Tgfbr2/Csf1/Bmp2/Ghr/Cxcl12/Il1rn/Ccr2/Il18/Tgfb2/Cxcl13/Tnfrsf11b/Tgfb3/Tnfrsf9/Fas/Il24/Tnfrsf14/Csf3r/Ackr3/Acvrl1/Cxcl5/Tnfrsf11a/Tgfb1/Tnfsf9/Tnfsf14/Tnfsf15/Cxcl1/Il10rb/Ccl3/Il19/Cx3cl1/Il6ra/Ccr1l1/Il27/Prl5a1/Cxcl15/Ccl6/Cxcr4/Ccl4/Il31/Ifngr2/Ccl24/Il4ra/Il1b/Il11ra1/Cxcl11/Il11ra2/Tnfrsf1a/Ccl17/Tnfsf8/Lepr/Il7r/Ltbr/Tslp/Il13ra2/Prl/Ccl28/Il15/Il1rap/Clcf1/Tnfsf13b/Cxcl3/Il13ra1/Ifnar2/Ccl22/Tnfsf4/Il34/Ccl11/Cxcr1/Il18r1/Il9/Ccr6/Prlr/Ccl19/Il22ra1/Il17re/Il11/Il15ra/Csf3/Tnfrsf18/Tnfrsf13b/Bmp7/Il4/Ifngr1/Cxcr5/Tnfrsf12a/Ngf/Acvr1/Cd40/Il5ra/Il1rl2/Bmpr2/Bmp6/Cxcl14/Ccl21b/Inha/Ccr10/Cxcl10\n\nNext, perform visualization of the GSEA results:\n\np1 &lt;- gseaplot2(enrich.res$`deseq2|treat_vs_control|gsea_kegg`,\n          geneSetID = \"mmu04820\")\n\np2 &lt;- gseaplot2(enrich.res$`deseq2|treat_vs_control|gsea_kegg`,\n                geneSetID = c(\"mmu04820\",\"mmu04512\"))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "BamFiles-example.html#pathway-and-transcription-factor-activity-inference",
    "href": "BamFiles-example.html#pathway-and-transcription-factor-activity-inference",
    "title": "\n1  Bam files example\n",
    "section": "\n1.9 Pathway and transcription factor activity inference",
    "text": "1.9 Pathway and transcription factor activity inference\nThe omicScope package seamlessly integrates pathway and transcription factor activity inference capabilities from the decoupleR package. This integration enables users to perform activity estimation with a single command, with the resulting activity scores automatically stored in the activityData slot of the omicscope object.\nomicScope comes with pre-loaded pathway and transcription factor regulatory network data for both human and mouse organisms, eliminating the need for users to download external databases.\n\n1.9.1 Pathway activity inference\nTo perform activity inference, use the infer_activity() function and specify the input_type parameter (defining the input data format) and infer_type parameter (specifying pathway or transcription factor inference). The function returns an activityData S4 object containing three slots: netData (prior knowledge network), inputData (gene expression matrix), and resData (estimated activity scores):\n\nos &lt;- infer_activity(os, \n                     input_type = \"counts\",\n                     infer_type = \"pathway\",\n                     organism = \"mouse\",\n                     use_local_netdata = TRUE)\n\nact &lt;- os@activityData\n\nstr(act)\n# Formal class 'activitydata' [package \"omicScope\"] with 5 slots\n#   ..@ inferType: chr \"pathway\"\n#   ..@ netData  : tibble [7,000 × 4] (S3: tbl_df/tbl/data.frame)\n#   .. ..$ source : chr [1:7000] \"Androgen\" \"Androgen\" \"Androgen\" \"Androgen\" ...\n#   .. ..$ target : chr [1:7000] \"Tmprss2\" \"Nkx3-1\" \"Mboat2\" \"Sarg\" ...\n#   .. ..$ weight : num [1:7000] 11.49 10.62 10.47 11.39 7.36 ...\n#   .. ..$ p_value: num [1:7000] 2.38e-47 2.21e-44 4.63e-44 2.79e-40 1.25e-39 ...\n#   ..@ inputData: num [1:39732, 1:6] 0 0.596 0 0.137 0 ...\n#   .. ..- attr(*, \"dimnames\")=List of 2\n#   .. .. ..$ : chr [1:39732] \"4933401J01Rik\" \"Xkr4\" \"Gm18956\" \"Gm37180\" ...\n#   .. .. ..$ : chr [1:6] \"day0-rep1\" \"day0-rep2\" \"day4-rep1\" \"day4-rep2\" ...\n#   ..@ diffData :'data.frame': 0 obs. of  0 variables\n#   ..@ resData  : tibble [84 × 6] (S3: tbl_df/tbl/data.frame)\n#   .. ..$ run_id   : num [1:84] 1 1 1 1 1 1 1 1 1 1 ...\n#   .. ..$ statistic: chr [1:84] \"mlm\" \"mlm\" \"mlm\" \"mlm\" ...\n#   .. ..$ source   : chr [1:84] \"Androgen\" \"EGFR\" \"Estrogen\" \"Hypoxia\" ...\n#   .. ..$ condition: chr [1:84] \"day0-rep1\" \"day0-rep1\" \"day0-rep1\" \"day0-rep1\" ...\n#   .. ..$ score    : num [1:84] 0.759 -0.253 0.399 1.19 -0.244 ...\n#   .. ..$ p_value  : num [1:84] 0.448 0.8 0.69 0.234 0.807 ...\n\nVisualize the results using the activity_plot() function:\n\nactivity_plot(os)\n\n\n\n\n\nActivity inference can also be conducted using differential expression analysis results. To do this, provide the diffdata object from differential expression analysis to the diff_data_obj parameter:\n\nos &lt;- infer_activity(os, \n                     input_type = \"diff_data\",\n                     diff_data_obj = os@diffExpData$deseq2$treat_vs_control,\n                     infer_type = \"pathway\",\n                     organism = \"mouse\",\n                     use_local_netdata = TRUE)\n# [2025-10-10 19:58:28] [TRACE]   [OmnipathR] Reading JSON from `C:\\Users\\JUNZHA~1\\AppData\\Local\\Temp\\RtmpeWbOhe/cache.json` (encoding: UTF-8).\n# [2025-10-10 19:58:28] [TRACE]   [OmnipathR] JSON validation successful: TRUE\n\nactivity_plot(os)\n\n\n\n\n\nTo gain deeper insights into pathway activation, we can visualize the individual gene contributions within the pathway. The pathway demonstrates clear activation patterns: target genes with positive regulatory weights predominantly exhibit positive t-values (1st quadrant), while genes with negative weights largely show negative t-values (3rd quadrant), indicating concordant regulation:\n\nactivity_plot(os, target_pathway = c(\"p53\",\"MAPK\"))\n\n\n\n\n\n\n1.9.2 Transcription factor activity inference\nTranscription factor activity can be inferred by setting the infer_type parameter to “tf”. Users can select from various statistical methods using the statistics parameter (consult the official decoupleR documentation for a comprehensive list of available methods). When visualizing results with activity_plot(), the top_tf parameter controls the number of top-ranked transcription factors displayed (default: 20):\n\nos &lt;- infer_activity(os, \n                     input_type = \"counts\",\n                     infer_type = \"tf\",\n                     organism = \"mouse\",\n                     statistics = \"ulm\",\n                     use_local_netdata = TRUE)\n# [2025-10-10 20:20:26] [TRACE]   [OmnipathR] Reading JSON from `C:\\Users\\JUNZHA~1\\AppData\\Local\\Temp\\RtmpeWbOhe/cache.json` (encoding: UTF-8).\n# [2025-10-10 20:20:26] [TRACE]   [OmnipathR] JSON validation successful: TRUE\n\nactivity_plot(os, top_tf = 40)\n\n\n\n\n\nDifferential expression analysis results provide another input option for transcription factor activity inference. By specifying a transcription factor of interest using the target_tf parameter in activity_plot(), users can examine the expression patterns of its regulated target genes:\n\nos &lt;- infer_activity(os, \n                     input_type = \"diff_data\",\n                     diff_data_obj = os@diffExpData$deseq2$treat_vs_control,\n                     infer_type = \"tf\",\n                     organism = \"mouse\",\n                     statistics = \"ulm\",\n                     use_local_netdata = TRUE)\n# [2025-10-10 20:26:16] [TRACE]   [OmnipathR] Reading JSON from `C:\\Users\\JUNZHA~1\\AppData\\Local\\Temp\\RtmpeWbOhe/cache.json` (encoding: UTF-8).\n# [2025-10-10 20:26:16] [TRACE]   [OmnipathR] JSON validation successful: TRUE\n\nactivity_plot(os, target_tf = c(\"Pou5f1\",\"Mef2a\"))",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Bam files example</span>"
    ]
  },
  {
    "objectID": "RawCounts-example.html",
    "href": "RawCounts-example.html",
    "title": "\n2  Raw counts example\n",
    "section": "",
    "text": "2.1 Introduction\nOmicScope supports flexible input formats including aligned BAM files, count matrices generated by FeatureCounts, or any standard gene expression matrix with genes as rows and samples as columns, providing users with versatile data import options as demonstrated in the following examples.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Raw counts example</span>"
    ]
  },
  {
    "objectID": "RawCounts-example.html#counts-matrix-input",
    "href": "RawCounts-example.html#counts-matrix-input",
    "title": "\n2  Raw counts example\n",
    "section": "\n2.2 Counts matrix input",
    "text": "2.2 Counts matrix input\nHere we load the built-in example count matrix provided by OmicScope:\n\ndata(\"counts\")\n\n# check\nhead(counts)\n#                    ../test-bam/0a.sorted.bam ../test-bam/0b.sorted.bam ../test-bam/4a.sorted.bam ../test-bam/4b.sorted.bam\n# ENSMUSG00000102693                         0                         1                         0                         0\n# ENSMUSG00000051951                        13                        16                       109                       147\n# ENSMUSG00000102851                         0                         1                         2                         2\n# ENSMUSG00000103377                         3                         4                        13                        26\n# ENSMUSG00000104017                         0                         4                        13                        15\n# ENSMUSG00000103025                         0                         0                         7                        14\n#                    ../test-bam/10a.sorted.bam ../test-bam/10b.sorted.bam\n# ENSMUSG00000102693                          0                          0\n# ENSMUSG00000051951                         65                        105\n# ENSMUSG00000102851                          0                          0\n# ENSMUSG00000103377                          6                          9\n# ENSMUSG00000104017                         13                         10\n# ENSMUSG00000103025                          3                          3\n\nNext, we construct an omicscope object from the loaded count matrix:\n⚠️ Important: The metadata data frame must contain a sample column to identify sample information.\n\nmta &lt;- data.frame(sample = c(\"../test-bam/0a.sorted.bam\",\"../test-bam/0b.sorted.bam\",\n                             \"../test-bam/4a.sorted.bam\",\"../test-bam/4b.sorted.bam\",\n                             \"../test-bam/10a.sorted.bam\",\"../test-bam/10b.sorted.bam\"),\n                  sample_name = c(\"day0-rep1\",\"day0-rep2\",\"day4-rep1\",\"day4-rep2\",\n                                  \"day10-rep1\",\"day10-rep2\"),\n                  group = rep(c(\"day0\",\"day4\",\"day10\"),each = 2))\nmta\n#                       sample sample_name group\n# 1  ../test-bam/0a.sorted.bam   day0-rep1  day0\n# 2  ../test-bam/0b.sorted.bam   day0-rep2  day0\n# 3  ../test-bam/4a.sorted.bam   day4-rep1  day4\n# 4  ../test-bam/4b.sorted.bam   day4-rep2  day4\n# 5 ../test-bam/10a.sorted.bam  day10-rep1 day10\n# 6 ../test-bam/10b.sorted.bam  day10-rep2 day10\n\nos &lt;- omicscope(gtfAnno = \"../test-bam/Mus_musculus.GRCm38.102.gtf.gz\",\n                counts = counts,\n                metadata = mta)\n\nos\n# class: omicscope \n# dim: 39732 6 \n# metadata(0):\n# assays(1): counts\n# rownames(39732): ENSMUSG00000102693 ENSMUSG00000051951 ... ENSMUSG00000094621 ENSMUSG00000095742\n# rowData names(3): gene_id gene_name gene_biotype\n# colnames(6): day0-rep1 day0-rep2 ... day10-rep1 day10-rep2\n# colData names(3): sample sample_name group\n\nAlternatively, omicScope can directly parse the output files generated by FeatureCounts by setting the parameter featureCountOutput = TRUE:\n\n# Don't run\n# \n# os &lt;- omicscope(gtfAnno = \"../test-bam/Mus_musculus.GRCm38.102.gtf.gz\",\n#                 counts = \"featurecounts_output/counts.info.txt\",\n#                 featureCountOutput = TRUE,\n#                 metadata = mta)\n# os\n\nOnce the omicscope object is successfully created, users can proceed with downstream analyses including differential expression, pathway enrichment, and visualization.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Raw counts example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html",
    "href": "UCSCzena-example.html",
    "title": "\n3  UCSC xena example\n",
    "section": "",
    "text": "3.1 Introduction\nUCSC Xena is a comprehensive portal for multi-cancer genomic and clinical data. OmicScope enables seamless integration of gene expression count matrices, clinical phenotypes, and survival data downloaded from UCSC Xena, facilitating downstream analyses including differential expression and survival prediction.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#data-download",
    "href": "UCSCzena-example.html#data-download",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.2 Data download",
    "text": "3.2 Data download\nFor demonstration purposes, we use lung adenocarcinoma (LUAD) as a case study, downloading gene expression count matrices, clinical phenotype annotations, and survival outcome data from the UCSC Xena portal (https://xena.ucsc.edu/) to showcase OmicScope’s integrated analysis workflow:\n\n# Counts\nwget https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LUAD.star_counts.tsv.gz\n\n# Phenotype data\nwget https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LUAD.clinical.tsv.gz\n\n# Survival data\nwget https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LUAD.survival.tsv.gz",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#omicscope-object-construction",
    "href": "UCSCzena-example.html#omicscope-object-construction",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.3 Omicscope object construction",
    "text": "3.3 Omicscope object construction\nThe omicscope object is constructed using the ucscZenaToObj() function, where the counts_data, pheno_data, and survival_data parameters accept the gene expression matrix, clinical phenotype table, and survival data downloaded from UCSC Xena, respectively:\n\nlibrary(omicScope)\n\nobj &lt;- ucscZenaToObj(gtf_anno = \"gencode.v36.annotation.gtf.gz\",\n                     counts_data = \"TCGA-LUAD.star_counts.tsv.gz\",\n                     pheno_data = \"TCGA-LUAD.clinical.tsv.gz\",\n                     survival_data = \"TCGA-LUAD.survival.tsv.gz\")\n\nobj\n# class: omicscope \n# dim: 60660 589 \n# metadata(0):\n#     assays(1): counts\n# rownames(60660): ENSG00000000003.15 ENSG00000000005.6 ... ENSG00000288674.1 ENSG00000288675.1\n# rowData names(3): gene_id gene_name gene_biotype\n# colnames(589): TCGA-38-7271-01A TCGA-55-7914-01A ... TCGA-55-6969-01A TCGA-55-6969-11A\n# colData names(96): sample id ... OS X_PATIENT",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#data-normalization",
    "href": "UCSCzena-example.html#data-normalization",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.4 Data normalization",
    "text": "3.4 Data normalization\nFollowing object construction, the raw count matrix is normalized to TPM (Transcripts Per Million) to enable cross-sample comparisons：\n\nobj &lt;- normalize_data(obj, norm_type = \"tpm\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#dimensionality-reduction",
    "href": "UCSCzena-example.html#dimensionality-reduction",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.5 Dimensionality reduction",
    "text": "3.5 Dimensionality reduction\nInter-sample relationships were assessed through dimensionality reduction analyses (PCA, UMAP, and t-SNE). To optimize computational efficiency, we restricted calculations to the top highly variable genes (HVGs) by configuring the top_hvg_genes parameter, significantly reducing processing time while preserving biologically relevant variance structures:\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"pca\",\n                     top_hvg_genes = 3000)\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"umap\",\n                     top_hvg_genes = 3000)\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"tsne\",\n                     top_hvg_genes = 3000)\n\nThe dimensionality reduction results are visualized using the dim_plot() function, which generates scatter plots of samples projected onto the reduced dimensional space:\n\np1 &lt;- dim_plot(obj, reduction = \"pca\")\np2 &lt;- dim_plot(obj, reduction = \"umap\")\np3 &lt;- dim_plot(obj, reduction = \"tsne\")\n\nlibrary(patchwork)\n\np1 + p2 + p3",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#differential-expression-analysis",
    "href": "UCSCzena-example.html#differential-expression-analysis",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.6 Differential expression analysis",
    "text": "3.6 Differential expression analysis\nWhen analyzing differential expression in datasets with large sample sizes, edgeR and limma-voom are the recommended tools for their computational speed and robust statistical framework, with limma-voom illustrated in this example:\n\nobj &lt;- differential_expression(obj, \n                               method = \"limma\",\n                               limmaApproach = \"voom\")\n\ndiff &lt;- obj@diffExpData$limma$treat_vs_control\n\nstr(diff)\n# Formal class 'diffdata' [package \"omicScope\"] with 9 slots\n#   ..@ contrastName   : chr \"treat_vs_control\"\n#   ..@ method         : chr \"limma\"\n#   ..@ design         :List of 1\n#   .. ..$ : num [1:589, 1:2] 1 1 1 1 1 1 1 1 1 1 ...\n#   .. .. ..- attr(*, \"dimnames\")=List of 2\n#   .. .. .. ..$ : chr [1:589] \"TCGA-38-7271-01A\" \"TCGA-55-7914-01A\" \"TCGA-95-7043-01A\" \"TCGA-73-4658-01A\" ...\n#   .. .. .. ..$ : chr [1:2] \"(Intercept)\" \"groupTumor\"\n#   .. .. ..- attr(*, \"assign\")= int [1:2] 0 1\n#   .. .. ..- attr(*, \"contrasts\")=List of 1\n#   .. .. .. ..$ group: chr \"contr.treatment\"\n#   ..@ log2FCthreshold: num 1\n#   ..@ pvalueThreshold: num 0.05\n#   ..@ sigUp          : int 3973\n#   ..@ sigDown        : int 3955\n#   ..@ nonSig         : int 52732\n#   ..@ data           :'data.frame':   60660 obs. of  10 variables:\n#   .. ..$ gene_id       : chr [1:60660] \"ENSG00000000003.15\" \"ENSG00000000005.6\" \"ENSG00000000419.13\" \"ENSG00000000457.14\" ...\n#   .. ..$ log2FoldChange: num [1:60660] 1.1 -0.429 0.296 0.526 1.678 ...\n#   .. ..$ AveExpr       : num [1:60660] 5.87 -4.76 4.99 3.99 2.82 ...\n#   .. ..$ t             : num [1:60660] 9.26 -1.37 3.97 7.06 13.32 ...\n#   .. ..$ pvalue        : num [1:60660] 3.86e-19 1.70e-01 8.08e-05 4.80e-12 1.39e-35 ...\n#   .. ..$ padj          : num [1:60660] 7.05e-18 2.33e-01 3.16e-04 4.65e-11 7.96e-34 ...\n#   .. ..$ B             : num [1:60660] 32.26 -6.11 0.07 16.3 69.99 ...\n#   .. ..$ gene_name     : chr [1:60660] \"TSPAN6\" \"TNMD\" \"DPM1\" \"SCYL3\" ...\n#   .. ..$ gene_biotype  : chr [1:60660] \"protein_coding\" \"protein_coding\" \"protein_coding\" \"protein_coding\" ...\n#   .. ..$ type          : chr [1:60660] \"sigUp\" \"nonSig\" \"nonSig\" \"nonSig\" ...\n\n# Check\ndiff@data |&gt; head()\n#              gene_id log2FoldChange   AveExpr          t       pvalue         padj            B gene_name   gene_biotype    type\n# 1 ENSG00000000003.15      1.0997480  5.872692   9.255036 3.862856e-19 7.051485e-18  32.25994586    TSPAN6 protein_coding   sigUp\n# 2  ENSG00000000005.6     -0.4286831 -4.762921  -1.374252 1.698829e-01 2.329236e-01  -6.10668869      TNMD protein_coding  nonSig\n# 3 ENSG00000000419.13      0.2959509  4.987883   3.969822 8.075471e-05 3.155024e-04   0.07004036      DPM1 protein_coding  nonSig\n# 4 ENSG00000000457.14      0.5261200  3.994452   7.056095 4.798641e-12 4.649187e-11  16.30391548     SCYL3 protein_coding  nonSig\n# 5 ENSG00000000460.17      1.6777640  2.815088  13.316756 1.391922e-35 7.957963e-34  69.98860263  C1orf112 protein_coding   sigUp\n# 6 ENSG00000000938.13     -2.2200498  4.360530 -18.605462 3.380108e-61 6.571710e-59 128.43374484       FGR protein_coding sigDown\n\nVisualizing differential expression results with volcano plots:\n\nvolcano_plot(object = obj,  method = \"limma\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#gene-expression-visualization",
    "href": "UCSCzena-example.html#gene-expression-visualization",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.7 Gene expression visualization",
    "text": "3.7 Gene expression visualization\nBefore visualizing gene expression, we need to extract normalized data using the get_normalized_data function:\n\nobj &lt;- get_normalized_data(obj)\n\n\n3.7.1 Gene heatmap plot\nIn this analysis, we filtered for genes in the METTL family and visualized their expression patterns using the exp_heatmap_plot function to create a heatmap:\n\ndif.res &lt;- diff@data\n\ngene &lt;- subset(dif.res, startsWith(gene_name,\"METTL\"))\n\n# Plot\nexp_heatmap_plot(obj, \n                 selected_gene = gene$gene_name)\n\n\n\n\n\nThe heatmap appearance can be customized by passing parameters to ComplexHeatmap through complexHeatmap_params. For instance, to disable row clustering:\n\nexp_heatmap_plot(obj, \n                 selected_gene = gene$gene_name,\n                 complexHeatmap_params = list(cluster_rows = FALSE))\n\n\n\n\n\n\n3.7.2 Gene expression boxplot\nBy default, the gene_boxViolin_plot function generates boxplot visualizations and uses the Wilcoxon test for statistical analysis:\n\ngene_boxViolin_plot(obj,\n                    selected_gene = c(\"METTL3\",\"METTL14\",\n                                      \"YTHDC1\",\"YTHDC2\",\n                                      \"YTHDF1\",\"YTHDF2\",\"YTHDF3\"),\n                    point_col = \"grey50\",\n                    point_alpha = 0.3)\n\n\n\n\n\nTo visualize the data using violin plots, set the type parameter to \"violin\":\n\ngene_boxViolin_plot(obj,\n                    selected_gene = c(\"METTL3\",\"METTL14\",\n                                      \"YTHDC1\",\"YTHDC2\",\n                                      \"YTHDF1\",\"YTHDF2\",\"YTHDF3\"),\n                    type = \"violin\",\n                    jitter.width = 0.15,\n                    point_col = \"grey50\",\n                    point_alpha = 0.3)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#gene-expression-correlation-analysis",
    "href": "UCSCzena-example.html#gene-expression-correlation-analysis",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.8 Gene expression correlation analysis",
    "text": "3.8 Gene expression correlation analysis\nGene expression is tightly and intricately regulated, often resulting in groups of genes sharing similar or contrasting expression patterns that reflect their functional relationships. The gene_cor_plot function allows visualization of pairwise gene correlations:\n\np1 &lt;- gene_cor_plot(obj,\n                    gene_1 = \"METTL3\",\n                    gene_2 = \"YTHDF2\",\n                    selected_group = \"Tumor\")\n\np2 &lt;- gene_cor_plot(obj,\n                    gene_1 = \"METTL3\",\n                    gene_2 = \"YTHDF2\",\n                    selected_group = \"Normal\")\n\np1 + p2",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "UCSCzena-example.html#survival-analysis",
    "href": "UCSCzena-example.html#survival-analysis",
    "title": "\n3  UCSC xena example\n",
    "section": "\n3.9 Survival analysis",
    "text": "3.9 Survival analysis\nBecause patient survival data was included during omicscope object construction, prognostic survival analysis is now possible. Survival curves can be generated by specifying the gene of interest in the surv_plot function:\n\nsurv_plot(obj,\n          selected_gene = c(\"YTHDF1\",\"YTHDF2\",\"YTHDF3\",\"METTL5\"))",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>UCSC xena example</span>"
    ]
  },
  {
    "objectID": "GTEX-samples-integration.html",
    "href": "GTEX-samples-integration.html",
    "title": "\n4  Integration of GTEx normal tissue samples\n",
    "section": "",
    "text": "4.1 Introduction\nTCGA datasets typically contain abundant tumor samples but relatively limited matched normal tissue samples. The GTEx database (https://www.gtexportal.org/home/) provides extensive RNA-seq data from normal tissues across various organs. By integrating GTEx normal samples with TCGA tumor data, researchers can mitigate analytical biases arising from insufficient normal controls. OMICSCOPE facilitates this integration by directly incorporating user-downloaded GTEx count data, streamlining the analytical workflow.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Integration of GTEx normal tissue samples</span>"
    ]
  },
  {
    "objectID": "GTEX-samples-integration.html#gtex-read-counts-download",
    "href": "GTEX-samples-integration.html#gtex-read-counts-download",
    "title": "\n4  Integration of GTEx normal tissue samples\n",
    "section": "\n4.2 GTEx read counts download",
    "text": "4.2 GTEx read counts download\nHere, we downloaded normal lung tissue count data from the GTEx database, as TCGA-LUAD contains only 59 normal samples, which is relatively limited:\n\n\n\n\n\nwget https://storage.googleapis.com/adult-gtex/bulk-gex/v10/rna-seq/counts-by-tissue/gene_reads_v10_lung.gct.gz",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Integration of GTEx normal tissue samples</span>"
    ]
  },
  {
    "objectID": "GTEX-samples-integration.html#object-construction",
    "href": "GTEX-samples-integration.html#object-construction",
    "title": "\n4  Integration of GTEx normal tissue samples\n",
    "section": "\n4.3 Object construction",
    "text": "4.3 Object construction\nWe then build the omicscope object by providing the downloaded GTEx count data to the gtex_counts_data parameter:\n\nobj &lt;- ucscZenaToObj(gtf_anno = \"gencode.v36.annotation.gtf.gz\",\n                     counts_data = \"TCGA-LUAD.star_counts.tsv.gz\",\n                     pheno_data = \"TCGA-LUAD.clinical.tsv.gz\",\n                     survival_data = \"TCGA-LUAD.survival.tsv.gz\",\n                     gtex_counts_data = \"gene_reads_v10_lung.gct.gz\")\n\nobj\n# class: omicscope \n# dim: 52739 1193 \n# metadata(0):\n# assays(1): counts\n# rownames(52739): ENSG00000223972.5 ENSG00000227232.5 ... ENSG00000210195.2 ENSG00000210196.2\n# rowData names(3): gene_id gene_name gene_biotype\n# colnames(1193): TCGA-38-7271-01A TCGA-55-7914-01A ... GTEX-ZZPT-1326-SM-5E43H GTEX-ZZPU-0526-SM-5E44U\n# colData names(97): sample id ... X_PATIENT group2",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Integration of GTEx normal tissue samples</span>"
    ]
  },
  {
    "objectID": "GTEX-samples-integration.html#data-normalization-and-reduction",
    "href": "GTEX-samples-integration.html#data-normalization-and-reduction",
    "title": "\n4  Integration of GTEx normal tissue samples\n",
    "section": "\n4.4 Data normalization and reduction",
    "text": "4.4 Data normalization and reduction\nThe next critical step is to examine whether batch effects exist between the GTEx normal tissue samples and TCGA normal samples. If batch effects are present and left uncorrected, they may confound results and lead to erroneous conclusions in downstream analyses:\n\nobj &lt;- normalize_data(obj, norm_type = \"tpm\")\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"pca\",\n                     top_hvg_genes = 3000)\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"umap\",\n                     top_hvg_genes = 3000)\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"tsne\",\n                     top_hvg_genes = 3000)\n\np1 &lt;- dim_plot(obj, reduction = \"pca\", color_by = \"group2\")\np2 &lt;- dim_plot(obj, reduction = \"umap\", color_by = \"group2\")\np3 &lt;- dim_plot(obj, reduction = \"tsne\", color_by = \"group2\")\n\n\ncowplot::plot_grid(plotlist = list(p1,p2,p3),\n                   ncol = 2)\n\n\n\n\n\nVisualizations from all three dimensionality reduction approaches consistently reveal pronounced batch effects, with GTEx samples clearly segregating from patient-derived normal tissue samples.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Integration of GTEx normal tissue samples</span>"
    ]
  },
  {
    "objectID": "GTEX-samples-integration.html#batch-effect-removal",
    "href": "GTEX-samples-integration.html#batch-effect-removal",
    "title": "\n4  Integration of GTEx normal tissue samples\n",
    "section": "\n4.5 Batch effect removal",
    "text": "4.5 Batch effect removal\nTo address the observed batch effects, we employ the ComBat-seq method through the correct_batch_effect function. Note that batch correction will replace the original count matrix with adjusted values. After applying this correction, we perform dimensionality reduction analyses again to assess whether samples now cluster by biological characteristics rather than technical batch:\n\nobj &lt;- correct_batch_effect(obj)\n# Found 2 batches\n# Using full model in ComBat-seq.\n# Adjusting for 1 covariate(s) or covariate level(s)\n# Estimating dispersions\n# Fitting the GLM model\n# Shrinkage off - using GLM estimates for parameters\n# Adjusting the data\n\nobj &lt;- normalize_data(obj, norm_type = \"tpm\")\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"pca\",\n                     top_hvg_genes = 3000)\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"umap\",\n                     top_hvg_genes = 3000)\n\nobj &lt;- run_reduction(object = obj, \n                     reduction = \"tsne\",\n                     top_hvg_genes = 3000)\n\np1 &lt;- dim_plot(obj, reduction = \"pca\", color_by = \"group2\")\np2 &lt;- dim_plot(obj, reduction = \"umap\", color_by = \"group2\")\np3 &lt;- dim_plot(obj, reduction = \"tsne\", color_by = \"group2\")\n\n\ncowplot::plot_grid(plotlist = list(p1,p2,p3),\n                   ncol = 2)\n\n\n\n\n\nWith batch effects successfully corrected, users can now proceed with standard downstream analyses, including differential expression, pathway enrichment, and other routine procedures.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Integration of GTEx normal tissue samples</span>"
    ]
  },
  {
    "objectID": "TCGAbiolinks-integration.html",
    "href": "TCGAbiolinks-integration.html",
    "title": "\n5  Integration of TCGAbiolinks\n",
    "section": "",
    "text": "5.1 Introduction\nomicScope is now compatible with TCGAbiolinks-curated gene expression matrices stored as SummarizedExperiment objects. Future development will extend compatibility to other data types.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Integration of TCGAbiolinks</span>"
    ]
  },
  {
    "objectID": "TCGAbiolinks-integration.html#retrieving-gene-expression-data-with-tcgabiolinks",
    "href": "TCGAbiolinks-integration.html#retrieving-gene-expression-data-with-tcgabiolinks",
    "title": "\n5  Integration of TCGAbiolinks\n",
    "section": "\n5.2 Retrieving gene expression data with TCGAbiolinks",
    "text": "5.2 Retrieving gene expression data with TCGAbiolinks\nFor demonstration purposes, we’ll download the expression matrix for LUAD (lung adenocarcinoma) using TCGAbiolinks. The following sample code returns a SummarizedExperiment object:\n\n# BiocManager::install(\"TCGAbiolinks\")\nlibrary(TCGAbiolinks)\nlibrary(SummarizedExperiment)\n\nquery.exp &lt;- GDCquery(\n  project = \"TCGA-LUAD\",\n  data.category = \"Transcriptome Profiling\",\n  data.type = \"Gene Expression Quantification\",\n  workflow.type = \"STAR - Counts\"\n)\n\nGDCdownload(\n  query = query.exp,\n  files.per.chunk = 200\n)\n\nluad.exp &lt;- GDCprepare(\n  query = query.exp,\n  save = TRUE,\n  save.filename = \"luadExp.rda\"\n)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Integration of TCGAbiolinks</span>"
    ]
  },
  {
    "objectID": "TCGAbiolinks-integration.html#omicscope-object-construction",
    "href": "TCGAbiolinks-integration.html#omicscope-object-construction",
    "title": "\n5  Integration of TCGAbiolinks\n",
    "section": "\n5.3 omicscope object construction",
    "text": "5.3 omicscope object construction\nThe TCGAbiolinksToObj function facilitates the conversion of SummarizedExperiment objects from TCGAbiolinks into omicScope objects. To enhance your analysis, we’ve included the gtex_counts_data parameter, which allows you to integrate counts data from corresponding normal tissues in the GTEx database:\n\nlibrary(omicScope)\n\nload(\"luadExp.rda\")\n\n# obj &lt;- TCGAbiolinksToObj(tcgabiolinks_obj = data)\n\nobj &lt;- TCGAbiolinksToObj(gtf_anno = \"gencode.v36.annotation.gtf.gz\",\n                         tcgabiolinks_obj = data,\n                         gtex_counts_data = \"gene_reads_v10_lung.gct.gz\")\nobj\n# class: omicscope \n# dim: 52739 1204 \n# metadata(0):\n# assays(1): counts\n# rownames(52739): ENSG00000223972.5 ENSG00000227232.5 ... ENSG00000210195.2 ENSG00000210196.2\n# rowData names(3): gene_id gene_name gene_biotype\n# colnames(1204): TCGA-44-6147-01B-06R-A277-07 TCGA-44-6147-01A-11R-1755-07 ...\n#   GTEX-ZZPT-1326-SM-5E43H GTEX-ZZPU-0526-SM-5E44U\n# colData names(99): sample patient ... OS group2",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Integration of TCGAbiolinks</span>"
    ]
  },
  {
    "objectID": "TCGAbiolinks-integration.html#downstream-analysis",
    "href": "TCGAbiolinks-integration.html#downstream-analysis",
    "title": "\n5  Integration of TCGAbiolinks\n",
    "section": "\n5.4 Downstream analysis",
    "text": "5.4 Downstream analysis\nNow that we have our omicscope object, we’re ready to perform downstream analyses! This includes quality control checks, batch effect correction, differential expression analysis, and other analytical steps:\n\nobj &lt;- normalize_data(obj)\n\nobj &lt;- run_reduction(obj, top_hvg_genes = 3000)\n\ndim_plot(obj, color_by = \"group2\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Integration of TCGAbiolinks</span>"
    ]
  },
  {
    "objectID": "TME-analysis.html",
    "href": "TME-analysis.html",
    "title": "\n6  Tumor microenvironment analysis\n",
    "section": "",
    "text": "6.1 Introduction\nomicScope integrates the IOBR package to facilitate comprehensive tumor microenvironment (TME) analysis. The run_TME_analysis function enables one-click TME characterization, storing all results in the tmeData slot. Users have the flexibility to select their preferred analytical strategy: either signature-based scoring using curated gene sets to evaluate TME characteristics, or deconvolution algorithms to estimate the abundance and composition of immune cell types within the tumor.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tumor microenvironment analysis</span>"
    ]
  },
  {
    "objectID": "TME-analysis.html#tme-analysis",
    "href": "TME-analysis.html#tme-analysis",
    "title": "\n6  Tumor microenvironment analysis\n",
    "section": "\n6.2 TME analysis",
    "text": "6.2 TME analysis\nUse the method parameter to choose between two analytical strategies: \"signature\" for signature-based scoring or \"deconvo\" for deconvolution analysis. Then specify the exact algorithm using either deconvo_method (for deconvolution) or signature_method (for signature analysis). Before proceeding, you need to install the IOBR package from its official website:\n\nobj &lt;- run_TME_analysis(obj,\n                        method = \"deconvo\",\n                        deconvo_method = \"cibersort\")\n# ==========================================================================\n#   IOBR v0.99.99  Immuno-Oncology Biological Research \n#   For Tutorial: https://iobr.github.io/book/\n#   For Help: https://github.com/IOBR/IOBR/issues\n# \n#  If you use IOBR in published research, please cite:\n#  DQ Zeng, YR Fang, ..., GC Yu*, WJ Liao*, \n#  Enhancing immuno-oncology investigations through multidimensional decoding \n#  of tumor microenvironment with IOBR 2.0. Cell Rep Methods 4, 100910 (2024). \n#  &  \n#  YR Fang, ..., WJ Liao*, DQ Zeng*, \n#  Systematic Investigation of Tumor Microenvironment and \n#  Antitumor Immunity With IOBR, Med Research (2025). \n#  https://onlinelibrary.wiley.com/doi/epdf/10.1002/mdr2.70001 \n# ==========================================================================\n# \n# &gt;&gt;&gt; Running CIBERSORT\n \nobj &lt;- run_TME_analysis(obj,\n                        method = \"signature\",\n                        signature_method = \"pca\")\n# &gt;&gt;&gt; Calculating signature score using PCA method\n# &gt;&gt;&gt; log2 transformation was finished\n# There were 50 or more warnings (use warnings() to see the first 50)\n\nCheck the results:\n\nstr(obj@tmeData)\n# Formal class 'SimpleList' [package \"S4Vectors\"] with 4 slots\n#   ..@ listData       :List of 2\n#   .. ..$ deconvoRes  : tibble [600 × 26] (S3: tbl_df/tbl/data.frame)\n#   .. .. ..$ ID                                    : chr [1:600] \"TCGA-44-6147-01B-06R-A277-07\" \"TCGA-44-6147-01A-11R-1755-07\" \"TCGA-44-7661-01A-11R-2066-07\" \"TCGA-05-4396-01A-21R-1858-07\" ...\n#   .. .. ..$ B_cells_naive_CIBERSORT               : num [1:600] 0.099 0.1708 0.0512 0.0333 0.0206 ...\n#   .. .. ..$ B_cells_memory_CIBERSORT              : num [1:600] 0.0817 0 0 0 0 ...\n#   .. .. ..$ Plasma_cells_CIBERSORT                : num [1:600] 0.12177 0.22735 0.00504 0.08953 0.07076 ...\n#   .. .. ..$ T_cells_CD8_CIBERSORT                 : num [1:600] 0.0166 0.0788 0.0678 0.0947 0.1116 ...\n#   .. .. ..$ T_cells_CD4_naive_CIBERSORT           : num [1:600] 0 0 0 0 0 0 0 0 0 0 ...\n#   .. .. ..$ T_cells_CD4_memory_resting_CIBERSORT  : num [1:600] 0.363 0.132 0.138 0.176 0.102 ...\n#   .. .. ..$ T_cells_CD4_memory_activated_CIBERSORT: num [1:600] 0.03211 0.02895 0.12342 0.00512 0.02324 ...\n#   .. .. ..$ T_cells_follicular_helper_CIBERSORT   : num [1:600] 0 0 0.0208 0.0593 0.0591 ...\n#   .. .. ..$ T_cells_regulatory_(Tregs)_CIBERSORT  : num [1:600] 0 0.0255 0.0572 0.0833 0.0218 ...\n#   .. .. ..$ T_cells_gamma_delta_CIBERSORT         : num [1:600] 0 0 0 0 0 0 0 0 0 0 ...\n#   .. .. ..$ NK_cells_resting_CIBERSORT            : num [1:600] 0 0.0271 0 0.0225 0.0189 ...\n#   .. .. ..$ NK_cells_activated_CIBERSORT          : num [1:600] 0.00647 0 0.01206 0 0.01423 ...\n#   .. .. ..$ Monocytes_CIBERSORT                   : num [1:600] 0.00051 0 0.05242 0.00818 0.01099 ...\n#   .. .. ..$ Macrophages_M0_CIBERSORT              : num [1:600] 0 0.1267 0.0166 0.115 0.1048 ...\n#   .. .. ..$ Macrophages_M1_CIBERSORT              : num [1:600] 0.0283 0.042 0.0682 0.0646 0.0865 ...\n#   .. .. ..$ Macrophages_M2_CIBERSORT              : num [1:600] 0.108 0.079 0.154 0.177 0.254 ...\n#   .. .. ..$ Dendritic_cells_resting_CIBERSORT     : num [1:600] 0 0 0.0628 0.0254 0.0288 ...\n#   .. .. ..$ Dendritic_cells_activated_CIBERSORT   : num [1:600] 0.06385 0.00959 0.09873 0.00743 0 ...\n#   .. .. ..$ Mast_cells_resting_CIBERSORT          : num [1:600] 0.0374 0.0508 0.0573 0.0143 0.0268 ...\n#   .. .. ..$ Mast_cells_activated_CIBERSORT        : num [1:600] 0 0 0 0.00257 0 ...\n#   .. .. ..$ Eosinophils_CIBERSORT                 : num [1:600] 0.032467 0 0.000917 0 0.014565 ...\n#   .. .. ..$ Neutrophils_CIBERSORT                 : num [1:600] 0.00945 0.00137 0.01276 0.02122 0.03073 ...\n#   .. .. ..$ P-value_CIBERSORT                     : num [1:600] 0.003 0.002 0.013 0.033 0.048 ...\n#   .. .. ..$ Correlation_CIBERSORT                 : num [1:600] 0.393 0.486 0.255 0.186 0.149 ...\n#   .. .. ..$ RMSE_CIBERSORT                        : num [1:600] 0.921 0.873 0.975 1.01 1.022 ...\n#   .. ..$ signatureRes: tibble [600 × 312] (S3: tbl_df/tbl/data.frame)\n#   .. .. ..$ ID                                                 : chr [1:600] \"TCGA-44-6147-01B-06R-A277-07\" \"TCGA-44-6147-01A-11R-1755-07\" \"TCGA-44-7661-01A-11R-2066-07\" \"TCGA-05-4396-01A-21R-1858-07\" ...\n#   .. .. ..$ CD_8_T_effector                                    : num [1:600] 0.123 -0.688 1.775 -1.586 2.836 ...\n#   .. .. ..$ DDR                                                : num [1:600] 2.482 -0.432 10.376 2.417 -2.956 ...\n#   .. .. ..$ APM                                                : num [1:600] -3.942 0.219 2.672 1.062 2.835 ...\n#   .. .. ..$ Immune_Checkpoint                                  : num [1:600] 1.031 0.619 3.723 -2.192 2.547 ...\n#   .. .. ..$ CellCycle_Reg                                      : num [1:600] 4.9797 -0.0903 1.0643 2.2662 -1.8748 ...\n#   .. .. ..$ Pan_F_TBRs                                         : num [1:600] -1.354 2.299 4.014 -0.713 2.682 ...\n#   .. .. ..$ EMT1                                               : num [1:600] -4.944 0.568 -2.085 1.285 -0.507 ...\n#   .. .. ..$ EMT2                                               : num [1:600] -1.049 0.636 3.633 -1.162 2.579 ...\n#   .. .. ..$ EMT3                                               : num [1:600] 3.224 0.664 2.018 1.005 -1.301 ...\n#   .. .. ..$ WNT_target                                         : num [1:600] 0.485 0.253 1.934 0.541 -0.203 ...\n#   .. .. ..$ FGFR3_related                                      : num [1:600] -1.359 1.214 1.87 -0.41 -0.217 ...\n#   .. .. ..$ Cell_cycle                                         : num [1:600] -4.62 -2.38 9.46 1.03 2.73 ...\n#   .. .. ..$ Mismatch_Repair                                    : num [1:600] -4.6338 -0.7052 4.6153 0.7524 0.0886 ...\n#   .. .. ..$ Homologous_recombination                           : num [1:600] -0.416 -0.786 5.158 -0.994 0.869 ...\n#   .. .. ..$ Nucleotide_excision_repair                         : num [1:600] -5.429 -0.628 5.428 1.23 0.488 ...\n#   .. .. ..$ DNA_replication                                    : num [1:600] -6.751 -1.466 6.203 -0.328 1.789 ...\n#   .. .. ..$ Base_excision_repair                               : num [1:600] -8.43 -0.45 4.212 -0.488 0.774 ...\n#   .. .. ..$ TMEscoreA_CIR                                      : num [1:600] -0.264 -0.885 7.293 -3.855 4.498 ...\n#   .. .. ..$ TMEscoreB_CIR                                      : num [1:600] 12.36 8.96 8.02 -2.46 -2.53 ...\n#   .. .. ..$ CD8_Rooney_et_al                                   : num [1:600] -1.108 -0.568 1.032 -2.207 1.822 ...\n#   .. .. ..$ B_cells_Rooney_et_al                               : num [1:600] 6.169 4.564 0.609 -2.129 -1.05 ...\n#   .. .. ..$ Treg_Rooney_et_al                                  : num [1:600] -0.291 0.378 2.764 -0.714 0.439 ...\n#   .. .. ..$ Macrophages_Rooney_et_al                           : num [1:600] -1.941 -0.959 0.823 -1.71 1.651 ...\n#   .. .. ..$ Neutrophils_Rooney_et_al                           : num [1:600] 1.011 0.6 2.635 -0.428 -0.448 ...\n#   .. .. ..$ pDCs_Rooney_et_al                                  : num [1:600] -1.629 0.865 5.736 -1.557 0.786 ...\n#   .. .. ..$ MHC_Class_I_Rooney_et_al                           : num [1:600] -3.3054 -0.0326 1.7711 1.0391 2.6542 ...\n#   .. .. ..$ Co_stimulation_APC_Rooney_et_al                    : num [1:600] 2.036 0.502 2.503 -1.299 2.316 ...\n#   .. .. ..$ Co_stimulation_T_cell_Rooney_et_al                 : num [1:600] 2.805 0.877 3.632 -1.309 0.11 ...\n#   .. .. ..$ Co_inhibition_APC_Rooney_et_al                     : num [1:600] -0.000842 -0.946441 2.964509 -1.559692 2.018563 ...\n#   .. .. ..$ Co_inhibition_T_cell_Rooney_et_al                  : num [1:600] 3.43 0.31 3.44 -2.34 1.68 ...\n#   .. .. ..$ Type_I_IFN_Reponse_Rooney_et_al                    : num [1:600] 0.684 2.265 3.26 -1.011 1.516 ...\n#   .. .. ..$ Type_II_IFN_Reponse_Rooney_et_al                   : num [1:600] 0.807 0.924 2.485 -0.539 -1.23 ...\n#   .. .. ..$ MHC_Class_I                                        : num [1:600] -4.243 0.272 3.069 1.01 2.815 ...\n#   .. .. ..$ MHC_Class_II                                       : num [1:600] -2.874 0.439 2.309 -1.171 2.261 ...\n#   .. .. ..$ T_cell_inflamed_GEP_Ayers_et_al                    : num [1:600] -0.607 0.863 2.99 -2.768 2.37 ...\n#   .. .. ..$ IFNG_signature_Ayers_et_al                         : num [1:600] 1.498 -0.218 2 -0.82 2.533 ...\n#   .. .. ..$ MDSC_Wang_et_al                                    : num [1:600] -0.2 0.831 6.026 -4.219 2.782 ...\n#   .. .. ..$ GPAGs                                              : num [1:600] 0.888 1.241 3.668 -0.808 -0.607 ...\n#   .. .. ..$ PPAGs                                              : num [1:600] -2.034 1.09 6.784 0.794 1.342 ...\n#   .. .. ..$ HLA_signature_gene                                 : num [1:600] 8.87 6.67 13.22 -12.7 4.15 ...\n#   .. .. ..$ PPARgama_target_genes                              : num [1:600] 0.909 -0.113 1.065 3.033 -0.849 ...\n#   .. .. ..$ B_cells_Danaher_et_al                              : num [1:600] 3.6503 4.2358 0.0501 -2.3161 -0.415 ...\n#   .. .. ..$ Cytotoxic_cells_Danaher_et_al                      : num [1:600] -1.942 -1.063 0.676 -2.331 1.239 ...\n#   .. .. ..$ DC_Danaher_et_al                                   : num [1:600] -1.208 -0.432 3.057 -1.287 3.067 ...\n#   .. .. ..$ Exhausted_CD8_Danaher_et_al                        : num [1:600] 0.117 -0.383 1.32 -1.712 1.414 ...\n#   .. .. ..$ Macrophages_Danaher_et_al                          : num [1:600] 1.122 -0.321 1.983 -1.764 1.854 ...\n#   .. .. ..$ Mast_cells_Danaher_et_al                           : num [1:600] 1.215 1.811 0.838 -1.362 -1.911 ...\n#   .. .. ..$ Neutrophils_Danaher_et_al                          : num [1:600] -0.316 0.391 1.247 -1.944 0.574 ...\n#   .. .. ..$ NK_CD56dim_cells_Danaher_et_al                     : num [1:600] -0.9082 -0.498 -0.2173 -0.1352 0.0911 ...\n#   .. .. ..$ NK_cells_Danaher_et_al                             : num [1:600] -1.421 -0.755 0.318 -1.2 1.274 ...\n#   .. .. ..$ T_cells_Danaher_et_al                              : num [1:600] 2.044 1.08 1.959 -1.498 0.545 ...\n#   .. .. ..$ TIP_Release_of_cancer_cell_antigens                : num [1:600] -8.341 0.148 2.668 1.781 0.76 ...\n#   .. .. ..$ TIP_Cancer_antigen_presentation_1                  : num [1:600] 3.852 -0.416 3.284 -1.918 0.969 ...\n#   .. .. ..$ TIP_Cancer_antigen_presentation_2                  : num [1:600] 1.3181 -0.5345 0.0936 -0.5675 -0.2321 ...\n#   .. .. ..$ TIP_Priming_and_activation_1                       : num [1:600] 3.81 1.86 6.21 -3.82 2.57 ...\n#   .. .. ..$ TIP_Priming_and_activation_2                       : num [1:600] 2.04 1.01 4.23 -2.5 1.89 ...\n#   .. .. ..$ TIP_Trafficking_of_immune_cells_to_tumors          : num [1:600] -0.358 1.631 4.721 -3.331 2.953 ...\n#   .. .. ..$ TIP_Infiltration_of_immune_cells_into_tumors_1     : num [1:600] -0.0437 0.963 -0.6779 -0.5759 -0.2505 ...\n#   .. .. ..$ TIP_Infiltration_of_immune_cells_into_tumors_2     : num [1:600] -1.308 -0.548 1.67 -0.357 -0.167 ...\n#   .. .. ..$ TIP_Recognition_of_cancer_cells_by_T_cells_1       : num [1:600] 2.524 0.949 5.37 -1.598 3.069 ...\n#   .. .. ..$ TIP_Recognition_of_cancer_cells_by_T_cells_2       : num [1:600] 3.394 0.625 3.38 -1.598 1.546 ...\n#   .. .. ..$ TIP_Killing_of_cancer_cells_1                      : num [1:600] 0.103 -0.94 1.561 -1.144 1.34 ...\n#   .. .. ..$ TIP_Killing_of_cancer_cells_2                      : num [1:600] -0.336 1.176 2.645 -2.732 2.793 ...\n#   .. .. ..$ TLS_Nature                                         : num [1:600] 2.85 1.84 2.52 -2.18 -1.6 ...\n#   .. .. ..$ TMEscoreA_plus                                     : num [1:600] -0.783 -1.412 3.924 -2.298 3.51 ...\n#   .. .. ..$ TMEscoreB_plus                                     : num [1:600] 3.13 3.03 3.98 -1.54 -1.29 ...\n#   .. .. ..$ B_cells_Bindea_et_al                               : num [1:600] 4.008 5.212 -0.699 -2.735 -0.45 ...\n#   .. .. ..$ T_cells_Bindea_et_al                               : num [1:600] 3.899 1.477 3.308 -2.232 0.332 ...\n#   .. .. ..$ T_helper_cells_Bindea_et_al                        : num [1:600] 3.038 0.334 3.402 2.985 -2.312 ...\n#   .. .. ..$ Tcm_Bindea_et_al                                   : num [1:600] 12.88 3.09 2.92 2.28 -4.83 ...\n#   .. .. ..$ Tem_Bindea_et_al                                   : num [1:600] 2.1243 0.8415 2.816 -0.0614 -1.5163 ...\n#   .. .. ..$ Th1_cells_Bindea_et_al                             : num [1:600] 2.42 0.18 4.66 -2.26 2 ...\n#   .. .. ..$ Th2_cells_Bindea_et_al                             : num [1:600] -0.707 -1.509 3.473 -0.233 1.319 ...\n#   .. .. ..$ TFH_Bindea_et_al                                   : num [1:600] 1.11 2.47 1.15 1.36 -3.09 ...\n#   .. .. ..$ Th17_cells_Bindea_et_al                            : num [1:600] -1.5419 0.1849 -0.0592 1.1036 -1.9045 ...\n#   .. .. ..$ CD8_T_cells_Bindea_et_al                           : num [1:600] 4.963 1.885 2.288 0.442 -1.62 ...\n#   .. .. ..$ Tgd_Bindea_et_al                                   : num [1:600] 2.8243 -0.0955 0.1329 -0.4503 -0.327 ...\n#   .. .. ..$ Cytotoxic_cells_Bindea_et_al                       : num [1:600] -0.559 -0.291 0.754 -2.63 0.587 ...\n#   .. .. ..$ NK_cells_Bindea_et_al                              : num [1:600] -1.044 2.327 2.476 -0.394 -1.232 ...\n#   .. .. ..$ NK_CD56dim_cells_Bindea_et_al                      : num [1:600] -1.221 -0.902 0.372 -0.406 0.836 ...\n#   .. .. ..$ DC_Bindea_et_al                                    : num [1:600] -2.076 0.192 4.468 -1.535 1.697 ...\n#   .. .. ..$ iDC_Bindea_et_al                                   : num [1:600] -2.909 -0.266 3.38 -2.546 0.688 ...\n#   .. .. ..$ aDC_Bindea_et_al                                   : num [1:600] -1.839 0.408 1.592 -0.107 1.584 ...\n#   .. .. ..$ Eosinophils_Bindea_et_al                           : num [1:600] 4.224 2.183 2.505 -0.203 -3.138 ...\n#   .. .. ..$ Macrophages_Bindea_et_al                           : num [1:600] 0.343 -0.223 3.779 -3.36 3.431 ...\n#   .. .. ..$ Mast_cells_Bindea_et_al                            : num [1:600] 2.24 3.05 1.89 -1.65 -2.97 ...\n#   .. .. ..$ Neutrophils_Bindea_et_al                           : num [1:600] 1.343 2.033 3.831 -2.884 0.491 ...\n#   .. .. ..$ SW480_cancer_cells_Bindea_et_al                    : num [1:600] -7.919 0.753 3.743 -0.803 2.096 ...\n#   .. .. ..$ Normal_mucosa_Bindea_et_al                         : num [1:600] 3.088 4.14 3.96 -0.244 1.043 ...\n#   .. .. ..$ Antigen_Processing_and_Presentation_Li_et_al       : num [1:600] -7.73 0.55 6.48 -1.66 3.72 ...\n#   .. .. ..$ Antimicrobials_Li_et_al                            : num [1:600] 3.24 2.28 13.11 -5.94 2.68 ...\n#   .. .. ..$ BCR_Signaling_Pathway_Li_et_al                     : num [1:600] 5.178 3.933 5.504 -0.601 -0.67 ...\n#   .. .. ..$ Chemokines_Li_et_al                                : num [1:600] -1.032 0.653 7.175 -3.592 3.14 ...\n#   .. .. ..$ Chemokine_Receptors_Li_et_al                       : num [1:600] 2.64283 2.15404 5.87339 -2.14288 -0.00636 ...\n#   .. .. ..$ Cytokines_Li_et_al                                 : num [1:600] 6.4835 3.864 8.2362 -2.4767 -0.0478 ...\n#   .. .. ..$ Cytokine_Receptors_Li_et_al                        : num [1:600] 6.5 6.17 9.29 -1.19 -3.56 ...\n#   .. .. ..$ Interferons_Li_et_al                               : num [1:600] 3.5293 -0.5651 0.0918 0.0784 -0.6349 ...\n#   .. .. ..$ Interferon_Receptor_Li_et_al                       : num [1:600] 1.882 1.034 0.513 -1.277 -0.536 ...\n#   .. .. .. [list output truncated]\n#   ..@ elementType    : chr \"ANY\"\n#   ..@ elementMetadata: NULL\n#   ..@ metadata       : list()",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tumor microenvironment analysis</span>"
    ]
  },
  {
    "objectID": "TME-analysis.html#visualization",
    "href": "TME-analysis.html#visualization",
    "title": "\n6  Tumor microenvironment analysis\n",
    "section": "\n6.3 Visualization",
    "text": "6.3 Visualization\nWe’ve included the tme_plot function to generate visualizations of your TME analysis.\n\n6.3.1 Boxplot\n\ntme_plot(obj, \n         method = \"deconvo\",\n         type = \"box\")\n\n\n\n\n\n\n6.3.2 Heatmap plot\n\ntme_plot(obj, \n         method = \"deconvo\",\n         type = \"heatmap\")\n\n\n\n\n\n\n6.3.3 Signature results plot\n\ntme_plot(obj, \n         method = \"signature\",\n         type = \"heatmap\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Tumor microenvironment analysis</span>"
    ]
  }
]